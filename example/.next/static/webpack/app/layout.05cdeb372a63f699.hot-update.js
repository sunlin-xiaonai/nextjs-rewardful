"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/../dist/index.js":
/*!************************!*\
  !*** ../dist/index.js ***!
  \************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$();\n\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _async_to_generator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n        return !!right[Symbol.hasInstance](left);\n    } else {\n        return left instanceof right;\n    }\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _object_spread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _define_property(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) {\n            symbols = symbols.filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n            });\n        }\n        keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _object_spread_props(target, source) {\n    source = source != null ? source : {};\n    if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n        ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction _ts_generator(thisArg, body) {\n    var f, y, t, g, _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    };\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nvar react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nvar axios = __webpack_require__(/*! axios */ \"(app-pages-browser)/../node_modules/axios/dist/browser/axios.cjs\");\nfunction _interopDefault(e) {\n    return e && e.__esModule ? e : {\n        default: e\n    };\n}\nvar axios__default = /*#__PURE__*/ _interopDefault(axios);\n// src/components/RewardfulProvider.tsx\n// src/utils/rewardful.ts\nvar initRewardful = function(publicKey) {\n    if (false) {}\n    var existingScript = document.querySelector('script[data-rewardful=\"'.concat(publicKey, '\"]'));\n    if (existingScript) {\n        console.log(\"Rewardful script already exists\");\n        return;\n    }\n    console.log(\"Adding Rewardful script with key:\", publicKey);\n    var script = document.createElement(\"script\");\n    script.async = true;\n    script.src = \"https://r.wdfl.co/rw.js\";\n    script.dataset.rewardful = publicKey;\n    script.onload = function() {\n        console.log(\"Rewardful script loaded\");\n    };\n    script.onerror = function(error) {\n        console.error(\"Error loading Rewardful script:\", error);\n    };\n    document.head.appendChild(script);\n};\nvar RewardfulContext = react.createContext({\n    visitor: null,\n    isLoading: true,\n    error: null\n});\nvar useRewardful = function() {\n    _s();\n    var context = react.useContext(RewardfulContext);\n    if (!context) {\n        throw new Error(\"useRewardful must be used within a RewardfulProvider\");\n    }\n    return context;\n};\n_s(useRewardful, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar RewardfulProvider = function(param) {\n    _s1();\n    var config = param.config, children = param.children;\n    var _react_useState = _sliced_to_array(react.useState(null), 2), visitor = _react_useState[0], setVisitor = _react_useState[1];\n    var _react_useState1 = _sliced_to_array(react.useState(true), 2), isLoading = _react_useState1[0], setIsLoading = _react_useState1[1];\n    var _react_useState2 = _sliced_to_array(react.useState(null), 2), error = _react_useState2[0], setError = _react_useState2[1];\n    react.useEffect(function() {\n        console.log(\"Starting Rewardful initialization...\");\n        var initializeRewardful = /*#__PURE__*/ function() {\n            var _ref = _async_to_generator(function() {\n                var attempts, maxAttempts, checkRewardful;\n                return _ts_generator(this, function(_state) {\n                    try {\n                        console.log(\"Config:\", config);\n                        initRewardful(config.publicKey);\n                        attempts = 0;\n                        maxAttempts = 10;\n                        checkRewardful = function() {\n                            console.log(\"Checking Rewardful...\", attempts);\n                            if (window.rewardful) {\n                                console.log(\"Rewardful loaded:\", window.rewardful);\n                                setVisitor({\n                                    affiliate: window.rewardful.affiliate,\n                                    referralCode: window.rewardful.referral,\n                                    isReferred: !!window.rewardful.referral\n                                });\n                                setIsLoading(false);\n                            } else {\n                                attempts++;\n                                if (attempts < maxAttempts) {\n                                    setTimeout(checkRewardful, 500);\n                                } else {\n                                    setError(new Error(\"Rewardful initialization timeout\"));\n                                    setIsLoading(false);\n                                }\n                            }\n                        };\n                        checkRewardful();\n                    } catch (err) {\n                        console.error(\"Rewardful initialization error:\", err);\n                        setError(_instanceof(err, Error) ? err : new Error(\"Failed to initialize Rewardful\"));\n                        setIsLoading(false);\n                    }\n                    return [\n                        2\n                    ];\n                });\n            });\n            return function initializeRewardful() {\n                return _ref.apply(this, arguments);\n            };\n        }();\n        initializeRewardful();\n    }, [\n        config.publicKey\n    ]);\n    if (isLoading) {\n        return /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n            children: [\n                /* @__PURE__ */ jsxRuntime.jsx(\"p\", {\n                    children: \"Loading Rewardful...\"\n                }),\n                /* @__PURE__ */ jsxRuntime.jsxs(\"p\", {\n                    children: [\n                        \"Public Key: \",\n                        config.publicKey\n                    ]\n                })\n            ]\n        });\n    }\n    if (error) {\n        return /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n            children: [\n                /* @__PURE__ */ jsxRuntime.jsxs(\"p\", {\n                    children: [\n                        \"Error initializing Rewardful: \",\n                        error.message\n                    ]\n                }),\n                /* @__PURE__ */ jsxRuntime.jsxs(\"p\", {\n                    children: [\n                        \"Public Key: \",\n                        config.publicKey\n                    ]\n                })\n            ]\n        });\n    }\n    return /* @__PURE__ */ jsxRuntime.jsx(RewardfulContext.Provider, {\n        value: {\n            visitor: visitor,\n            isLoading: isLoading,\n            error: error\n        },\n        children: children\n    });\n};\n_s1(RewardfulProvider, \"9Kati/WcapwssF6sBnrr9qeLaNc=\");\n_c = RewardfulProvider;\nvar ReferralLink = function(param) {\n    _s2();\n    var _param_className = param.className, className = _param_className === void 0 ? \"\" : _param_className, baseUrl = param.baseUrl, children = param.children;\n    var _visitor_affiliate;\n    var _useRewardful = useRewardful(), visitor = _useRewardful.visitor, isLoading = _useRewardful.isLoading;\n    if (isLoading) {\n        return /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n            children: \"Loading...\"\n        });\n    }\n    var referralCode = visitor === null || visitor === void 0 ? void 0 : (_visitor_affiliate = visitor.affiliate) === null || _visitor_affiliate === void 0 ? void 0 : _visitor_affiliate.code;\n    var referralUrl = referralCode ? \"\".concat(baseUrl).concat(baseUrl.includes(\"?\") ? \"&\" : \"?\", \"via=\").concat(referralCode) : baseUrl;\n    return /* @__PURE__ */ jsxRuntime.jsx(\"a\", {\n        href: referralUrl,\n        className: className,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: children || referralUrl\n    });\n};\n_s2(ReferralLink, \"8ooaBxGSoewHTNXe2KBSRtNIfKQ=\", false, function() {\n    return [\n        useRewardful,\n        useRewardful,\n        useRewardful\n    ];\n});\n_c1 = ReferralLink;\nvar RewardfulServiceImpl = /*#__PURE__*/ function() {\n    function RewardfulServiceImpl() {\n        _class_call_check(this, RewardfulServiceImpl);\n        this.api = axios__default.default.create({\n            baseURL: \"/api/rewardful\"\n        });\n        this.api.interceptors.response.use(function(response) {\n            return response.data;\n        }, function(error) {\n            if (error.response) {\n                var _error_response_data;\n                throw new Error(((_error_response_data = error.response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.error) || \"API request failed\");\n            }\n            throw error;\n        });\n    }\n    _create_class(RewardfulServiceImpl, [\n        {\n            key: \"createAffiliate\",\n            value: function createAffiliate(data) {\n                var _this = this;\n                return _async_to_generator(function() {\n                    return _ts_generator(this, function(_state) {\n                        return [\n                            2,\n                            _this.api.post(\"?path=/affiliates\", data)\n                        ];\n                    });\n                })();\n            }\n        },\n        {\n            key: \"getAffiliate\",\n            value: function getAffiliate(id) {\n                var _this = this;\n                return _async_to_generator(function() {\n                    return _ts_generator(this, function(_state) {\n                        return [\n                            2,\n                            _this.api.get(\"?path=/affiliates/\".concat(id))\n                        ];\n                    });\n                })();\n            }\n        },\n        {\n            key: \"getAllAffiliates\",\n            value: /*\n    async getCommissions(affiliateId: string): Promise<{\n      data: Commission[];\n      total_count: number;\n    }> {\n      return this.api.get(`?path=/commissions`, {\n        params: { \n          path: '/commissions',\n          affiliate_id: affiliateId \n        }\n      });\n    }\n  \n    async getStats(affiliateId: string): Promise<{\n      visitors: number;\n      leads: number;\n      conversions: number;\n    }> {\n      return this.api.get(`?path=/affiliates/${affiliateId}/stats`);\n    }\n  \n    // 获取单个佣金详情\n    async getCommissionById(id: string): Promise<Commission> {\n      return this.api.get('', {\n        params: {\n          path: `/commissions/${id}`,\n        }\n      });\n    }\n  \n    */ // 获取所有分销员列表\n            function getAllAffiliates() {\n                var _this = this;\n                return _async_to_generator(function() {\n                    return _ts_generator(this, function(_state) {\n                        return [\n                            2,\n                            _this.api.get(\"\", {\n                                params: {\n                                    path: \"/affiliates\",\n                                    expand: [\n                                        \"stats\"\n                                    ]\n                                }\n                            })\n                        ];\n                    });\n                })();\n            }\n        },\n        {\n            key: \"getDashboardData\",\n            value: function getDashboardData(affiliateId) {\n                var _this = this;\n                return _async_to_generator(function() {\n                    return _ts_generator(this, function(_state) {\n                        return [\n                            2,\n                            _this.api.get(\"\", {\n                                params: {\n                                    path: \"/affiliates/\".concat(affiliateId)\n                                }\n                            })\n                        ];\n                    });\n                })();\n            }\n        }\n    ]);\n    return RewardfulServiceImpl;\n}();\nvar rewardfulService = new RewardfulServiceImpl();\nvar AffiliateSignup = function(param) {\n    _s3();\n    var onSuccess = param.onSuccess;\n    var _react_useState = _sliced_to_array(react.useState({\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        paypalEmail: \"\",\n        inviteCode: \"\"\n    }), 2), formData = _react_useState[0], setFormData = _react_useState[1];\n    var _react_useState1 = _sliced_to_array(react.useState(false), 2), isSubmitting = _react_useState1[0], setIsSubmitting = _react_useState1[1];\n    var _react_useState2 = _sliced_to_array(react.useState(null), 2), error = _react_useState2[0], setError = _react_useState2[1];\n    var _react_useState3 = _sliced_to_array(react.useState(false), 2), success = _react_useState3[0], setSuccess = _react_useState3[1];\n    var _react_useState4 = _sliced_to_array(react.useState(null), 2), successData = _react_useState4[0], setSuccessData = _react_useState4[1];\n    var handleSubmit = /*#__PURE__*/ function() {\n        var _ref = _async_to_generator(function(e) {\n            var response, err;\n            return _ts_generator(this, function(_state) {\n                switch(_state.label){\n                    case 0:\n                        e.preventDefault();\n                        console.log(\"\\uD83D\\uDE80 Starting form submission...\");\n                        console.log(\"\\uD83D\\uDCDD Form Data:\", formData);\n                        setIsSubmitting(true);\n                        setError(null);\n                        setSuccess(false);\n                        setSuccessData(null);\n                        _state.label = 1;\n                    case 1:\n                        _state.trys.push([\n                            1,\n                            3,\n                            4,\n                            5\n                        ]);\n                        console.log(\"\\uD83D\\uDCE4 Sending affiliate creation request...\");\n                        return [\n                            4,\n                            rewardfulService.createAffiliate({\n                                email: formData.email,\n                                first_name: formData.firstName,\n                                last_name: formData.lastName,\n                                paypal_email: formData.paypalEmail,\n                                invite_code: formData.inviteCode || void 0\n                            })\n                        ];\n                    case 2:\n                        response = _state.sent();\n                        console.log(\"✅ Submission successful! Response:\", response);\n                        setSuccessData(response);\n                        setSuccess(true);\n                        onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(response);\n                        console.log(\"\\uD83E\\uDDF9 Clearing form...\");\n                        setFormData({\n                            email: \"\",\n                            firstName: \"\",\n                            lastName: \"\",\n                            paypalEmail: \"\",\n                            inviteCode: \"\"\n                        });\n                        return [\n                            3,\n                            5\n                        ];\n                    case 3:\n                        err = _state.sent();\n                        console.error(\"❌ Submission failed:\", err);\n                        setError(_instanceof(err, Error) ? err.message : \"An error occurred\");\n                        return [\n                            3,\n                            5\n                        ];\n                    case 4:\n                        console.log(\"\\uD83C\\uDFC1 Form submission completed\");\n                        setIsSubmitting(false);\n                        return [\n                            7\n                        ];\n                    case 5:\n                        return [\n                            2\n                        ];\n                }\n            });\n        });\n        return function handleSubmit(e) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var handleChange = function(e) {\n        var _e_target = e.target, name = _e_target.name, value = _e_target.value;\n        console.log(\"\\uD83D\\uDCDD Field Change:\", {\n            field: name,\n            value: value\n        });\n        setFormData(function(prev) {\n            return _object_spread_props(_object_spread({}, prev), _define_property({}, name, value));\n        });\n    };\n    return /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n        className: \"flex justify-center items-center  bg-indigo-50\",\n        children: [\n            success && successData && /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                className: \"fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded shadow-lg max-w-md\",\n                children: /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                    className: \"flex items-start\",\n                    children: [\n                        /* @__PURE__ */ jsxRuntime.jsx(\"svg\", {\n                            className: \"w-6 h-6 mr-2 mt-0.5\",\n                            fill: \"none\",\n                            stroke: \"currentColor\",\n                            viewBox: \"0 0 24 24\",\n                            children: /* @__PURE__ */ jsxRuntime.jsx(\"path\", {\n                                strokeLinecap: \"round\",\n                                strokeLinejoin: \"round\",\n                                strokeWidth: \"2\",\n                                d: \"M5 13l4 4L19 7\"\n                            })\n                        }),\n                        /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                            children: [\n                                /* @__PURE__ */ jsxRuntime.jsx(\"p\", {\n                                    className: \"font-medium\",\n                                    children: \"Successfully registered as affiliate!\"\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    className: \"mt-2 text-sm\",\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsxs(\"p\", {\n                                            children: [\n                                                /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                                    className: \"font-medium\",\n                                                    children: \"ID:\"\n                                                }),\n                                                \" \",\n                                                successData.id\n                                            ]\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsxs(\"p\", {\n                                            children: [\n                                                /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                                    className: \"font-medium\",\n                                                    children: \"Code:\"\n                                                }),\n                                                \" \",\n                                                successData.code\n                                            ]\n                                        }),\n                                        successData.name && /* @__PURE__ */ jsxRuntime.jsxs(\"p\", {\n                                            children: [\n                                                /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                                    className: \"font-medium\",\n                                                    children: \"Name:\"\n                                                }),\n                                                \" \",\n                                                successData.name\n                                            ]\n                                        }),\n                                        successData.email && /* @__PURE__ */ jsxRuntime.jsxs(\"p\", {\n                                            children: [\n                                                /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                                    className: \"font-medium\",\n                                                    children: \"Email:\"\n                                                }),\n                                                \" \",\n                                                successData.email\n                                            ]\n                                        })\n                                    ]\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsx(\"p\", {\n                                    className: \"mt-2 text-xs\",\n                                    children: \"Please check your email for confirmation and next steps.\"\n                                })\n                            ]\n                        })\n                    ]\n                })\n            }),\n            /* @__PURE__ */ jsxRuntime.jsx(\"form\", {\n                onSubmit: handleSubmit,\n                className: \"w-[400px] bg-indigo-50 rounded shadow p-3\",\n                children: /* @__PURE__ */ jsxRuntime.jsxs(\"fieldset\", {\n                    className: \"border-4 border-dotted border-indigo-500 p-5\",\n                    children: [\n                        /* @__PURE__ */ jsxRuntime.jsx(\"legend\", {\n                            className: \"px-2 italic text-indigo-500 -mx-2 text-2xl\",\n                            children: \"Become an Affiliate!\"\n                        }),\n                        error && /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                            className: \"bg-red-50 border border-red-300 text-red-500 px-4 py-3 rounded mb-4\",\n                            children: /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                className: \"flex items-start\",\n                                children: [\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"svg\", {\n                                        className: \"w-6 h-6 mr-2 mt-0.5 flex-shrink-0\",\n                                        fill: \"none\",\n                                        stroke: \"currentColor\",\n                                        viewBox: \"0 0 24 24\",\n                                        children: /* @__PURE__ */ jsxRuntime.jsx(\"path\", {\n                                            strokeLinecap: \"round\",\n                                            strokeLinejoin: \"round\",\n                                            strokeWidth: \"2\",\n                                            d: \"M6 18L18 6M6 6l12 12\"\n                                        })\n                                    }),\n                                    /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                        className: \"flex-1\",\n                                        children: [\n                                            /* @__PURE__ */ jsxRuntime.jsx(\"p\", {\n                                                className: \"font-medium\",\n                                                children: error.split(\":\")[0]\n                                            }),\n                                            error.includes(\":\") && /* @__PURE__ */ jsxRuntime.jsx(\"p\", {\n                                                className: \"text-sm mt-1\",\n                                                children: error.split(\":\")[1].trim()\n                                            })\n                                        ]\n                                    })\n                                ]\n                            })\n                        }),\n                        /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                            className: \"space-y-4\",\n                            children: [\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"label\", {\n                                            className: \"text-xs font-bold text-indigo-500 after:content-['*'] after:text-red-400\",\n                                            children: \"Email Address\"\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"input\", {\n                                            type: \"email\",\n                                            name: \"email\",\n                                            value: formData.email,\n                                            onChange: handleChange,\n                                            required: true,\n                                            className: \"w-full p-2 mt-1 outline-none ring-none focus:ring-2 focus:ring-indigo-500 rounded\"\n                                        })\n                                    ]\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"label\", {\n                                            className: \"text-xs font-bold text-indigo-500 after:content-['*'] after:text-red-400\",\n                                            children: \"First Name\"\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"input\", {\n                                            type: \"text\",\n                                            name: \"firstName\",\n                                            value: formData.firstName,\n                                            onChange: handleChange,\n                                            required: true,\n                                            className: \"w-full p-2 mt-1 outline-none ring-none focus:ring-2 focus:ring-indigo-500 rounded\"\n                                        })\n                                    ]\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"label\", {\n                                            className: \"text-xs font-bold text-indigo-500 after:content-['*'] after:text-red-400\",\n                                            children: \"Last Name\"\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"input\", {\n                                            type: \"text\",\n                                            name: \"lastName\",\n                                            value: formData.lastName,\n                                            onChange: handleChange,\n                                            required: true,\n                                            className: \"w-full p-2 mt-1 outline-none ring-none focus:ring-2 focus:ring-indigo-500 rounded\"\n                                        })\n                                    ]\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"label\", {\n                                            className: \"text-xs font-bold text-indigo-500 after:content-['*'] after:text-red-400\",\n                                            children: \"PayPal Email\"\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"input\", {\n                                            type: \"email\",\n                                            name: \"paypalEmail\",\n                                            value: formData.paypalEmail,\n                                            onChange: handleChange,\n                                            required: true,\n                                            className: \"w-full p-2 mt-1 outline-none ring-none focus:ring-2 focus:ring-indigo-500 rounded\"\n                                        })\n                                    ]\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"label\", {\n                                            className: \"text-xs font-bold text-indigo-500\",\n                                            children: \"Invite Code (Optional)\"\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"input\", {\n                                            type: \"text\",\n                                            name: \"inviteCode\",\n                                            value: formData.inviteCode,\n                                            onChange: handleChange,\n                                            className: \"w-full p-2 mt-1 outline-none ring-none focus:ring-2 focus:ring-indigo-500 rounded\"\n                                        })\n                                    ]\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsx(\"button\", {\n                                    type: \"submit\",\n                                    disabled: isSubmitting,\n                                    className: \"w-full rounded bg-indigo-500 text-indigo-50 p-2 text-center font-bold hover:bg-indigo-400 mt-4\",\n                                    children: isSubmitting ? /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                        className: \"flex items-center justify-center\",\n                                        children: [\n                                            /* @__PURE__ */ jsxRuntime.jsxs(\"svg\", {\n                                                className: \"animate-spin h-5 w-5 mr-3\",\n                                                viewBox: \"0 0 24 24\",\n                                                children: [\n                                                    /* @__PURE__ */ jsxRuntime.jsx(\"circle\", {\n                                                        className: \"opacity-25\",\n                                                        cx: \"12\",\n                                                        cy: \"12\",\n                                                        r: \"10\",\n                                                        stroke: \"currentColor\",\n                                                        strokeWidth: \"4\",\n                                                        fill: \"none\"\n                                                    }),\n                                                    /* @__PURE__ */ jsxRuntime.jsx(\"path\", {\n                                                        className: \"opacity-75\",\n                                                        fill: \"currentColor\",\n                                                        d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                                                    })\n                                                ]\n                                            }),\n                                            /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                                children: \"Submitting...\"\n                                            })\n                                        ]\n                                    }) : \"Submit Application\"\n                                })\n                            ]\n                        })\n                    ]\n                })\n            })\n        ]\n    });\n};\n_s3(AffiliateSignup, \"UcxhgNx4ubE3bnaDOVs4EiDmlqI=\");\n_c2 = AffiliateSignup;\nvar AffiliateDashboardCard = function(param) {\n    var commission = param.commission, onShare = param.onShare;\n    var links = commission.links, commission_stats = commission.commission_stats;\n    var primaryLink = links[0];\n    var stats = commission_stats.currencies.USD;\n    return /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n        className: \"bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 p-6 space-y-6\",\n        children: /* @__PURE__ */ jsxRuntime.jsxs(\"fieldset\", {\n            className: \"border-4 border-dotted border-indigo-500 p-5\",\n            children: [\n                /* @__PURE__ */ jsxRuntime.jsx(\"legend\", {\n                    className: \"px-2 italic text-indigo-500 -mx-2 text-2xl\",\n                    children: \"Personal Information\"\n                }),\n                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                    className: \"space-y-4\",\n                    children: [\n                        /* @__PURE__ */ jsxRuntime.jsx(\"h2\", {\n                            className: \"text-lg font-semibold\",\n                            children: \"Personal Information\"\n                        }),\n                        /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                            className: \"space-y-3\",\n                            children: [\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    className: \"flex items-center gap-2\",\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"svg\", {\n                                            className: \"w-5 h-5 text-gray-500\",\n                                            fill: \"none\",\n                                            stroke: \"currentColor\",\n                                            viewBox: \"0 0 24 24\",\n                                            children: /* @__PURE__ */ jsxRuntime.jsx(\"path\", {\n                                                strokeLinecap: \"round\",\n                                                strokeLinejoin: \"round\",\n                                                strokeWidth: \"2\",\n                                                d: \"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                                            })\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                            children: \"\".concat(commission.first_name, \" \").concat(commission.last_name)\n                                        })\n                                    ]\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    className: \"flex items-center gap-2\",\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"svg\", {\n                                            className: \"w-5 h-5 text-gray-500\",\n                                            fill: \"none\",\n                                            stroke: \"currentColor\",\n                                            viewBox: \"0 0 24 24\",\n                                            children: /* @__PURE__ */ jsxRuntime.jsx(\"path\", {\n                                                strokeLinecap: \"round\",\n                                                strokeLinejoin: \"round\",\n                                                strokeWidth: \"2\",\n                                                d: \"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n                                            })\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                            children: commission.email\n                                        })\n                                    ]\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    className: \"flex items-center gap-2\",\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"svg\", {\n                                            className: \"w-5 h-5 text-gray-500\",\n                                            fill: \"none\",\n                                            stroke: \"currentColor\",\n                                            viewBox: \"0 0 24 24\",\n                                            children: /* @__PURE__ */ jsxRuntime.jsx(\"path\", {\n                                                strokeLinecap: \"round\",\n                                                strokeLinejoin: \"round\",\n                                                strokeWidth: \"2\",\n                                                d: \"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\"\n                                            })\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                            children: commission.paypal_email\n                                        })\n                                    ]\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    className: \"flex items-center gap-2\",\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"svg\", {\n                                            className: \"w-5 h-5 text-gray-500\",\n                                            fill: \"none\",\n                                            stroke: \"currentColor\",\n                                            viewBox: \"0 0 24 24\",\n                                            children: /* @__PURE__ */ jsxRuntime.jsx(\"path\", {\n                                                strokeLinecap: \"round\",\n                                                strokeLinejoin: \"round\",\n                                                strokeWidth: \"2\",\n                                                d: \"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                                            })\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                            children: new Date(commission.created_at).toLocaleDateString()\n                                        })\n                                    ]\n                                })\n                            ]\n                        })\n                    ]\n                }),\n                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                    className: \"space-y-4\",\n                    children: [\n                        /* @__PURE__ */ jsxRuntime.jsx(\"h2\", {\n                            className: \"text-lg font-semibold\",\n                            children: \"Referral Link\"\n                        }),\n                        /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                            className: \"flex items-center gap-2 bg-gray-50 p-3 rounded\",\n                            children: [\n                                /* @__PURE__ */ jsxRuntime.jsx(\"input\", {\n                                    type: \"text\",\n                                    readOnly: true,\n                                    value: (primaryLink === null || primaryLink === void 0 ? void 0 : primaryLink.url) || \"\",\n                                    className: \"flex-1 bg-transparent outline-none\"\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsx(\"button\", {\n                                    onClick: onShare,\n                                    className: \"text-blue-600 hover:text-blue-800\",\n                                    children: /* @__PURE__ */ jsxRuntime.jsx(\"svg\", {\n                                        className: \"w-5 h-5\",\n                                        fill: \"none\",\n                                        stroke: \"currentColor\",\n                                        viewBox: \"0 0 24 24\",\n                                        children: /* @__PURE__ */ jsxRuntime.jsx(\"path\", {\n                                            strokeLinecap: \"round\",\n                                            strokeLinejoin: \"round\",\n                                            strokeWidth: \"2\",\n                                            d: \"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z\"\n                                        })\n                                    })\n                                })\n                            ]\n                        }),\n                        /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                            className: \"grid grid-cols-3 gap-4 text-center\",\n                            children: [\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                                            className: \"text-sm text-gray-500\",\n                                            children: \"Visitors\"\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                                            className: \"font-semibold\",\n                                            children: commission.visitors\n                                        })\n                                    ]\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                                            className: \"text-sm text-gray-500\",\n                                            children: \"Leads\"\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                                            className: \"font-semibold\",\n                                            children: commission.leads\n                                        })\n                                    ]\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                                            className: \"text-sm text-gray-500\",\n                                            children: \"Conversions\"\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                                            className: \"font-semibold\",\n                                            children: commission.conversions\n                                        })\n                                    ]\n                                })\n                            ]\n                        })\n                    ]\n                }),\n                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                    className: \"space-y-4\",\n                    children: [\n                        /* @__PURE__ */ jsxRuntime.jsx(\"h2\", {\n                            className: \"text-lg font-semibold\",\n                            children: \"Income Status\"\n                        }),\n                        /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                            className: \"grid grid-cols-2 gap-4\",\n                            children: [\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    className: \"bg-green-50 p-4 rounded-lg\",\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                                            className: \"text-sm text-green-600\",\n                                            children: \"Total Income\"\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                            className: \"text-2xl font-bold text-green-700\",\n                                            children: [\n                                                \"$\",\n                                                (stats.total.cents / 100).toFixed(2)\n                                            ]\n                                        })\n                                    ]\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    className: \"bg-yellow-50 p-4 rounded-lg\",\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                                            className: \"text-sm text-yellow-600\",\n                                            children: \"Pending\"\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                            className: \"text-2xl font-bold text-yellow-700\",\n                                            children: [\n                                                \"$\",\n                                                (stats.unpaid.cents / 100).toFixed(2)\n                                            ]\n                                        })\n                                    ]\n                                })\n                            ]\n                        })\n                    ]\n                })\n            ]\n        })\n    });\n};\n_c3 = AffiliateDashboardCard;\nexports.AffiliateDashboardCard = AffiliateDashboardCard;\nexports.AffiliateSignup = AffiliateSignup;\nexports.ReferralLink = ReferralLink;\nexports.RewardfulProvider = RewardfulProvider;\nexports.initRewardful = initRewardful;\nexports.rewardfulService = rewardfulService;\nexports.useRewardful = useRewardful;\nvar _c, _c1, _c2, _c3;\n$RefreshReg$(_c, \"RewardfulProvider\");\n$RefreshReg$(_c1, \"ReferralLink\");\n$RefreshReg$(_c2, \"AffiliateSignup\");\n$RefreshReg$(_c3, \"AffiliateDashboardCard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FDckM7d0NBQ0w7cUNBQ0g7Z0NBQ0w7Z0NBQ0EsYUFBYSxHQUFHNUosV0FBV3VELElBQUksQ0FBQyxPQUFPO29DQUNuQ00sV0FBVztvQ0FDWDNCLFVBQVU7d0NBQ04sYUFBYSxHQUFHbEMsV0FBV3dELEdBQUcsQ0FBQyxPQUFPOzRDQUNsQ0ssV0FBVzs0Q0FDWDNCLFVBQVU7d0NBQ2Q7d0NBQ0EsYUFBYSxHQUFHbEMsV0FBV3VELElBQUksQ0FBQyxPQUFPOzRDQUNuQ00sV0FBVzs0Q0FDWDNCLFVBQVU7Z0RBQ047Z0RBQ0M0RyxDQUFBQSxNQUFNZSxNQUFNLENBQUNGLEtBQUssR0FBRyxHQUFFLEVBQUdDLE9BQU8sQ0FBQzs2Q0FDdEM7d0NBQ0w7cUNBQ0g7Z0NBQ0w7NkJBQ0g7d0JBQ0w7cUJBQ0g7Z0JBQ0w7YUFDSDtRQUNMO0lBQ0o7QUFDSjtNQTFPSXBCO0FBMk9Kc0IsOEJBQThCLEdBQUd0QjtBQUNqQ3NCLHVCQUF1QixHQUFHbEU7QUFDMUJrRSxvQkFBb0IsR0FBR25HO0FBQ3ZCbUcseUJBQXlCLEdBQUcvSDtBQUM1QitILHFCQUFxQixHQUFHeEo7QUFDeEJ3Six3QkFBd0IsR0FBR25FO0FBQzNCbUUsb0JBQW9CLEdBQUduSSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vZGlzdC9pbmRleC5qcz8wOGRhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmZ1bmN0aW9uIF9hcnJheV9saWtlX3RvX2FycmF5KGFyciwgbGVuKSB7XG4gICAgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7XG4gICAgZm9yKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspYXJyMltpXSA9IGFycltpXTtcbiAgICByZXR1cm4gYXJyMjtcbn1cbmZ1bmN0aW9uIF9hcnJheV93aXRoX2hvbGVzKGFycikge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7XG59XG5mdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpO1xuICAgICAgICB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGluZm8uZG9uZSkge1xuICAgICAgICByZXNvbHZlKHZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7XG4gICAgfVxufVxuZnVuY3Rpb24gX2FzeW5jX3RvX2dlbmVyYXRvcihmbikge1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzLCBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgICB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7XG4gICAgICAgICAgICBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJuZXh0XCIsIHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHtcbiAgICAgICAgICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwidGhyb3dcIiwgZXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF9uZXh0KHVuZGVmaW5lZCk7XG4gICAgICAgIH0pO1xuICAgIH07XG59XG5mdW5jdGlvbiBfY2xhc3NfY2FsbF9jaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspe1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgICAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICAgICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIF9jcmVhdGVfY2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn1cbmZ1bmN0aW9uIF9kZWZpbmVfcHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gICAgaWYgKGtleSBpbiBvYmopIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIG9iajtcbn1cbmZ1bmN0aW9uIF9pbnN0YW5jZW9mKGxlZnQsIHJpZ2h0KSB7XG4gICAgaWYgKHJpZ2h0ICE9IG51bGwgJiYgdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiByaWdodFtTeW1ib2wuaGFzSW5zdGFuY2VdKSB7XG4gICAgICAgIHJldHVybiAhIXJpZ2h0W1N5bWJvbC5oYXNJbnN0YW5jZV0obGVmdCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGxlZnQgaW5zdGFuY2VvZiByaWdodDtcbiAgICB9XG59XG5mdW5jdGlvbiBfaXRlcmFibGVfdG9fYXJyYXlfbGltaXQoYXJyLCBpKSB7XG4gICAgdmFyIF9pID0gYXJyID09IG51bGwgPyBudWxsIDogdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBhcnJbU3ltYm9sLml0ZXJhdG9yXSB8fCBhcnJbXCJAQGl0ZXJhdG9yXCJdO1xuICAgIGlmIChfaSA9PSBudWxsKSByZXR1cm47XG4gICAgdmFyIF9hcnIgPSBbXTtcbiAgICB2YXIgX24gPSB0cnVlO1xuICAgIHZhciBfZCA9IGZhbHNlO1xuICAgIHZhciBfcywgX2U7XG4gICAgdHJ5IHtcbiAgICAgICAgZm9yKF9pID0gX2kuY2FsbChhcnIpOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKXtcbiAgICAgICAgICAgIF9hcnIucHVzaChfcy52YWx1ZSk7XG4gICAgICAgICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgX2QgPSB0cnVlO1xuICAgICAgICBfZSA9IGVycjtcbiAgICB9IGZpbmFsbHl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7XG4gICAgICAgIH0gZmluYWxseXtcbiAgICAgICAgICAgIGlmIChfZCkgdGhyb3cgX2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIF9hcnI7XG59XG5mdW5jdGlvbiBfbm9uX2l0ZXJhYmxlX3Jlc3QoKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxcXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufVxuZnVuY3Rpb24gX29iamVjdF9zcHJlYWQodGFyZ2V0KSB7XG4gICAgZm9yKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9O1xuICAgICAgICB2YXIgb3duS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gICAgICAgIGlmICh0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBvd25LZXlzID0gb3duS2V5cy5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpLmZpbHRlcihmdW5jdGlvbihzeW0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIHN5bSkuZW51bWVyYWJsZTtcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfVxuICAgICAgICBvd25LZXlzLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgICBfZGVmaW5lX3Byb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gdGFyZ2V0O1xufVxuZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7XG4gICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpO1xuICAgIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICAgIHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpO1xuICAgICAgICBpZiAoZW51bWVyYWJsZU9ubHkpIHtcbiAgICAgICAgICAgIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbihzeW0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTtcbiAgICB9XG4gICAgcmV0dXJuIGtleXM7XG59XG5mdW5jdGlvbiBfb2JqZWN0X3NwcmVhZF9wcm9wcyh0YXJnZXQsIHNvdXJjZSkge1xuICAgIHNvdXJjZSA9IHNvdXJjZSAhPSBudWxsID8gc291cmNlIDoge307XG4gICAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn1cbmZ1bmN0aW9uIF9zbGljZWRfdG9fYXJyYXkoYXJyLCBpKSB7XG4gICAgcmV0dXJuIF9hcnJheV93aXRoX2hvbGVzKGFycikgfHwgX2l0ZXJhYmxlX3RvX2FycmF5X2xpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkX2l0ZXJhYmxlX3RvX2FycmF5KGFyciwgaSkgfHwgX25vbl9pdGVyYWJsZV9yZXN0KCk7XG59XG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRfaXRlcmFibGVfdG9fYXJyYXkobywgbWluTGVuKSB7XG4gICAgaWYgKCFvKSByZXR1cm47XG4gICAgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5X2xpa2VfdG9fYXJyYXkobywgbWluTGVuKTtcbiAgICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG4gICAgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTtcbiAgICBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShuKTtcbiAgICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheV9saWtlX3RvX2FycmF5KG8sIG1pbkxlbik7XG59XG5mdW5jdGlvbiBfdHNfZ2VuZXJhdG9yKHRoaXNBcmcsIGJvZHkpIHtcbiAgICB2YXIgZiwgeSwgdCwgZywgXyA9IHtcbiAgICAgICAgbGFiZWw6IDAsXG4gICAgICAgIHNlbnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdO1xuICAgICAgICAgICAgcmV0dXJuIHRbMV07XG4gICAgICAgIH0sXG4gICAgICAgIHRyeXM6IFtdLFxuICAgICAgICBvcHM6IFtdXG4gICAgfTtcbiAgICByZXR1cm4gZyA9IHtcbiAgICAgICAgbmV4dDogdmVyYigwKSxcbiAgICAgICAgXCJ0aHJvd1wiOiB2ZXJiKDEpLFxuICAgICAgICBcInJldHVyblwiOiB2ZXJiKDIpXG4gICAgfSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSksIGc7XG4gICAgZnVuY3Rpb24gdmVyYihuKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbih2KSB7XG4gICAgICAgICAgICByZXR1cm4gc3RlcChbXG4gICAgICAgICAgICAgICAgbixcbiAgICAgICAgICAgICAgICB2XG4gICAgICAgICAgICBdKTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc3RlcChvcCkge1xuICAgICAgICBpZiAoZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7XG4gICAgICAgIHdoaWxlKF8pdHJ5IHtcbiAgICAgICAgICAgIGlmIChmID0gMSwgeSAmJiAodCA9IG9wWzBdICYgMiA/IHlbXCJyZXR1cm5cIl0gOiBvcFswXSA/IHlbXCJ0aHJvd1wiXSB8fCAoKHQgPSB5W1wicmV0dXJuXCJdKSAmJiB0LmNhbGwoeSksIDApIDogeS5uZXh0KSAmJiAhKHQgPSB0LmNhbGwoeSwgb3BbMV0pKS5kb25lKSByZXR1cm4gdDtcbiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbXG4gICAgICAgICAgICAgICAgb3BbMF0gJiAyLFxuICAgICAgICAgICAgICAgIHQudmFsdWVcbiAgICAgICAgICAgIF07XG4gICAgICAgICAgICBzd2l0Y2gob3BbMF0pe1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgIHQgPSBvcDtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgICAgICAgICBfLmxhYmVsKys7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogb3BbMV0sXG4gICAgICAgICAgICAgICAgICAgICAgICBkb25lOiBmYWxzZVxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGNhc2UgNTpcbiAgICAgICAgICAgICAgICAgICAgXy5sYWJlbCsrO1xuICAgICAgICAgICAgICAgICAgICB5ID0gb3BbMV07XG4gICAgICAgICAgICAgICAgICAgIG9wID0gW1xuICAgICAgICAgICAgICAgICAgICAgICAgMFxuICAgICAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBjYXNlIDc6XG4gICAgICAgICAgICAgICAgICAgIG9wID0gXy5vcHMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEodCA9IF8udHJ5cywgdCA9IHQubGVuZ3RoID4gMCAmJiB0W3QubGVuZ3RoIC0gMV0pICYmIChvcFswXSA9PT0gNiB8fCBvcFswXSA9PT0gMikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF8gPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSAzICYmICghdCB8fCBvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgXy5sYWJlbCA9IG9wWzFdO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSA2ICYmIF8ubGFiZWwgPCB0WzFdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfLmxhYmVsID0gdFsxXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHQgPSBvcDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0ICYmIF8ubGFiZWwgPCB0WzJdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfLmxhYmVsID0gdFsyXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF8ub3BzLnB1c2gob3ApO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRbMl0pIF8ub3BzLnBvcCgpO1xuICAgICAgICAgICAgICAgICAgICBfLnRyeXMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb3AgPSBib2R5LmNhbGwodGhpc0FyZywgXyk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIG9wID0gW1xuICAgICAgICAgICAgICAgIDYsXG4gICAgICAgICAgICAgICAgZVxuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIHkgPSAwO1xuICAgICAgICB9IGZpbmFsbHl7XG4gICAgICAgICAgICBmID0gdCA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wWzBdICYgNSkgdGhyb3cgb3BbMV07XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZTogb3BbMF0gPyBvcFsxXSA6IHZvaWQgMCxcbiAgICAgICAgICAgIGRvbmU6IHRydWVcbiAgICAgICAgfTtcbiAgICB9XG59XG52YXIgcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIGpzeFJ1bnRpbWUgPSByZXF1aXJlKCdyZWFjdC9qc3gtcnVudGltZScpO1xudmFyIGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTtcbmZ1bmN0aW9uIF9pbnRlcm9wRGVmYXVsdChlKSB7XG4gICAgcmV0dXJuIGUgJiYgZS5fX2VzTW9kdWxlID8gZSA6IHtcbiAgICAgICAgZGVmYXVsdDogZVxuICAgIH07XG59XG52YXIgYXhpb3NfX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovIF9pbnRlcm9wRGVmYXVsdChheGlvcyk7XG4vLyBzcmMvY29tcG9uZW50cy9SZXdhcmRmdWxQcm92aWRlci50c3hcbi8vIHNyYy91dGlscy9yZXdhcmRmdWwudHNcbnZhciBpbml0UmV3YXJkZnVsID0gZnVuY3Rpb24ocHVibGljS2V5KSB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIpIHJldHVybjtcbiAgICB2YXIgZXhpc3RpbmdTY3JpcHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdzY3JpcHRbZGF0YS1yZXdhcmRmdWw9XCInLmNvbmNhdChwdWJsaWNLZXksICdcIl0nKSk7XG4gICAgaWYgKGV4aXN0aW5nU2NyaXB0KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiUmV3YXJkZnVsIHNjcmlwdCBhbHJlYWR5IGV4aXN0c1wiKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zb2xlLmxvZyhcIkFkZGluZyBSZXdhcmRmdWwgc2NyaXB0IHdpdGgga2V5OlwiLCBwdWJsaWNLZXkpO1xuICAgIHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuICAgIHNjcmlwdC5hc3luYyA9IHRydWU7XG4gICAgc2NyaXB0LnNyYyA9IFwiaHR0cHM6Ly9yLndkZmwuY28vcncuanNcIjtcbiAgICBzY3JpcHQuZGF0YXNldC5yZXdhcmRmdWwgPSBwdWJsaWNLZXk7XG4gICAgc2NyaXB0Lm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIlJld2FyZGZ1bCBzY3JpcHQgbG9hZGVkXCIpO1xuICAgIH07XG4gICAgc2NyaXB0Lm9uZXJyb3IgPSBmdW5jdGlvbihlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgbG9hZGluZyBSZXdhcmRmdWwgc2NyaXB0OlwiLCBlcnJvcik7XG4gICAgfTtcbiAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XG59O1xudmFyIFJld2FyZGZ1bENvbnRleHQgPSByZWFjdC5jcmVhdGVDb250ZXh0KHtcbiAgICB2aXNpdG9yOiBudWxsLFxuICAgIGlzTG9hZGluZzogdHJ1ZSxcbiAgICBlcnJvcjogbnVsbFxufSk7XG52YXIgdXNlUmV3YXJkZnVsID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGNvbnRleHQgPSByZWFjdC51c2VDb250ZXh0KFJld2FyZGZ1bENvbnRleHQpO1xuICAgIGlmICghY29udGV4dCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ1c2VSZXdhcmRmdWwgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIFJld2FyZGZ1bFByb3ZpZGVyXCIpO1xuICAgIH1cbiAgICByZXR1cm4gY29udGV4dDtcbn07XG52YXIgUmV3YXJkZnVsUHJvdmlkZXIgPSBmdW5jdGlvbihwYXJhbSkge1xuICAgIHZhciBjb25maWcgPSBwYXJhbS5jb25maWcsIGNoaWxkcmVuID0gcGFyYW0uY2hpbGRyZW47XG4gICAgdmFyIF9yZWFjdF91c2VTdGF0ZSA9IF9zbGljZWRfdG9fYXJyYXkocmVhY3QudXNlU3RhdGUobnVsbCksIDIpLCB2aXNpdG9yID0gX3JlYWN0X3VzZVN0YXRlWzBdLCBzZXRWaXNpdG9yID0gX3JlYWN0X3VzZVN0YXRlWzFdO1xuICAgIHZhciBfcmVhY3RfdXNlU3RhdGUxID0gX3NsaWNlZF90b19hcnJheShyZWFjdC51c2VTdGF0ZSh0cnVlKSwgMiksIGlzTG9hZGluZyA9IF9yZWFjdF91c2VTdGF0ZTFbMF0sIHNldElzTG9hZGluZyA9IF9yZWFjdF91c2VTdGF0ZTFbMV07XG4gICAgdmFyIF9yZWFjdF91c2VTdGF0ZTIgPSBfc2xpY2VkX3RvX2FycmF5KHJlYWN0LnVzZVN0YXRlKG51bGwpLCAyKSwgZXJyb3IgPSBfcmVhY3RfdXNlU3RhdGUyWzBdLCBzZXRFcnJvciA9IF9yZWFjdF91c2VTdGF0ZTJbMV07XG4gICAgcmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uKCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIlN0YXJ0aW5nIFJld2FyZGZ1bCBpbml0aWFsaXphdGlvbi4uLlwiKTtcbiAgICAgICAgdmFyIGluaXRpYWxpemVSZXdhcmRmdWwgPSAvKiNfX1BVUkVfXyovIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIF9yZWYgPSBfYXN5bmNfdG9fZ2VuZXJhdG9yKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHZhciBhdHRlbXB0cywgbWF4QXR0ZW1wdHMsIGNoZWNrUmV3YXJkZnVsO1xuICAgICAgICAgICAgICAgIHJldHVybiBfdHNfZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uKF9zdGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJDb25maWc6XCIsIGNvbmZpZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbml0UmV3YXJkZnVsKGNvbmZpZy5wdWJsaWNLZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYXR0ZW1wdHMgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgbWF4QXR0ZW1wdHMgPSAxMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrUmV3YXJkZnVsID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJDaGVja2luZyBSZXdhcmRmdWwuLi5cIiwgYXR0ZW1wdHMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh3aW5kb3cucmV3YXJkZnVsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiUmV3YXJkZnVsIGxvYWRlZDpcIiwgd2luZG93LnJld2FyZGZ1bCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFZpc2l0b3Ioe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWZmaWxpYXRlOiB3aW5kb3cucmV3YXJkZnVsLmFmZmlsaWF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZmVycmFsQ29kZTogd2luZG93LnJld2FyZGZ1bC5yZWZlcnJhbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzUmVmZXJyZWQ6ICEhd2luZG93LnJld2FyZGZ1bC5yZWZlcnJhbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRlbXB0cysrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXR0ZW1wdHMgPCBtYXhBdHRlbXB0cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChjaGVja1Jld2FyZGZ1bCwgNTAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldEVycm9yKG5ldyBFcnJvcihcIlJld2FyZGZ1bCBpbml0aWFsaXphdGlvbiB0aW1lb3V0XCIpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tSZXdhcmRmdWwoKTtcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiUmV3YXJkZnVsIGluaXRpYWxpemF0aW9uIGVycm9yOlwiLCBlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0RXJyb3IoX2luc3RhbmNlb2YoZXJyLCBFcnJvcikgPyBlcnIgOiBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gaW5pdGlhbGl6ZSBSZXdhcmRmdWxcIikpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgICAgICAgICAgICAgMlxuICAgICAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gaW5pdGlhbGl6ZVJld2FyZGZ1bCgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSgpO1xuICAgICAgICBpbml0aWFsaXplUmV3YXJkZnVsKCk7XG4gICAgfSwgW1xuICAgICAgICBjb25maWcucHVibGljS2V5XG4gICAgXSk7XG4gICAgaWYgKGlzTG9hZGluZykge1xuICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcImRpdlwiLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcInBcIiwge1xuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJMb2FkaW5nIFJld2FyZGZ1bC4uLlwiXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcInBcIiwge1xuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJQdWJsaWMgS2V5OiBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZy5wdWJsaWNLZXlcbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBdXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeHMoXCJkaXZcIiwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3hzKFwicFwiLCB7XG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICBcIkVycm9yIGluaXRpYWxpemluZyBSZXdhcmRmdWw6IFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3IubWVzc2FnZVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcInBcIiwge1xuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJQdWJsaWMgS2V5OiBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZy5wdWJsaWNLZXlcbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBdXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFJld2FyZGZ1bENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICAgIHZpc2l0b3I6IHZpc2l0b3IsXG4gICAgICAgICAgICBpc0xvYWRpbmc6IGlzTG9hZGluZyxcbiAgICAgICAgICAgIGVycm9yOiBlcnJvclxuICAgICAgICB9LFxuICAgICAgICBjaGlsZHJlbjogY2hpbGRyZW5cbiAgICB9KTtcbn07XG52YXIgUmVmZXJyYWxMaW5rID0gZnVuY3Rpb24ocGFyYW0pIHtcbiAgICB2YXIgX3BhcmFtX2NsYXNzTmFtZSA9IHBhcmFtLmNsYXNzTmFtZSwgY2xhc3NOYW1lID0gX3BhcmFtX2NsYXNzTmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF9wYXJhbV9jbGFzc05hbWUsIGJhc2VVcmwgPSBwYXJhbS5iYXNlVXJsLCBjaGlsZHJlbiA9IHBhcmFtLmNoaWxkcmVuO1xuICAgIHZhciBfdmlzaXRvcl9hZmZpbGlhdGU7XG4gICAgdmFyIF91c2VSZXdhcmRmdWwgPSB1c2VSZXdhcmRmdWwoKSwgdmlzaXRvciA9IF91c2VSZXdhcmRmdWwudmlzaXRvciwgaXNMb2FkaW5nID0gX3VzZVJld2FyZGZ1bC5pc0xvYWRpbmc7XG4gICAgaWYgKGlzTG9hZGluZykge1xuICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwiZGl2XCIsIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIkxvYWRpbmcuLi5cIlxuICAgICAgICB9KTtcbiAgICB9XG4gICAgdmFyIHJlZmVycmFsQ29kZSA9IHZpc2l0b3IgPT09IG51bGwgfHwgdmlzaXRvciA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF92aXNpdG9yX2FmZmlsaWF0ZSA9IHZpc2l0b3IuYWZmaWxpYXRlKSA9PT0gbnVsbCB8fCBfdmlzaXRvcl9hZmZpbGlhdGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92aXNpdG9yX2FmZmlsaWF0ZS5jb2RlO1xuICAgIHZhciByZWZlcnJhbFVybCA9IHJlZmVycmFsQ29kZSA/IFwiXCIuY29uY2F0KGJhc2VVcmwpLmNvbmNhdChiYXNlVXJsLmluY2x1ZGVzKFwiP1wiKSA/IFwiJlwiIDogXCI/XCIsIFwidmlhPVwiKS5jb25jYXQocmVmZXJyYWxDb2RlKSA6IGJhc2VVcmw7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcImFcIiwge1xuICAgICAgICBocmVmOiByZWZlcnJhbFVybCxcbiAgICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICAgIHRhcmdldDogXCJfYmxhbmtcIixcbiAgICAgICAgcmVsOiBcIm5vb3BlbmVyIG5vcmVmZXJyZXJcIixcbiAgICAgICAgY2hpbGRyZW46IGNoaWxkcmVuIHx8IHJlZmVycmFsVXJsXG4gICAgfSk7XG59O1xudmFyIFJld2FyZGZ1bFNlcnZpY2VJbXBsID0gLyojX19QVVJFX18qLyBmdW5jdGlvbigpIHtcbiAgICBmdW5jdGlvbiBSZXdhcmRmdWxTZXJ2aWNlSW1wbCgpIHtcbiAgICAgICAgX2NsYXNzX2NhbGxfY2hlY2sodGhpcywgUmV3YXJkZnVsU2VydmljZUltcGwpO1xuICAgICAgICB0aGlzLmFwaSA9IGF4aW9zX19kZWZhdWx0LmRlZmF1bHQuY3JlYXRlKHtcbiAgICAgICAgICAgIGJhc2VVUkw6IFwiL2FwaS9yZXdhcmRmdWxcIlxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5hcGkuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gICAgICAgIH0sIGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IucmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2Vycm9yX3Jlc3BvbnNlX2RhdGE7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCgoX2Vycm9yX3Jlc3BvbnNlX2RhdGEgPSBlcnJvci5yZXNwb25zZS5kYXRhKSA9PT0gbnVsbCB8fCBfZXJyb3JfcmVzcG9uc2VfZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Vycm9yX3Jlc3BvbnNlX2RhdGEuZXJyb3IpIHx8IFwiQVBJIHJlcXVlc3QgZmFpbGVkXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBfY3JlYXRlX2NsYXNzKFJld2FyZGZ1bFNlcnZpY2VJbXBsLCBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJjcmVhdGVBZmZpbGlhdGVcIixcbiAgICAgICAgICAgIHZhbHVlOiAvLyDliJvlu7rliIbplIDlkZhcbiAgICAgICAgICAgIGZ1bmN0aW9uIGNyZWF0ZUFmZmlsaWF0ZShkYXRhKSB7XG4gICAgICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgICAgICByZXR1cm4gX2FzeW5jX3RvX2dlbmVyYXRvcihmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90c19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24oX3N0YXRlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuYXBpLnBvc3QoXCI/cGF0aD0vYWZmaWxpYXRlc1wiLCBkYXRhKVxuICAgICAgICAgICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSkoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImdldEFmZmlsaWF0ZVwiLFxuICAgICAgICAgICAgdmFsdWU6IC8vIOiOt+WPluWIhumUgOWRmOivpuaDhVxuICAgICAgICAgICAgZnVuY3Rpb24gZ2V0QWZmaWxpYXRlKGlkKSB7XG4gICAgICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgICAgICByZXR1cm4gX2FzeW5jX3RvX2dlbmVyYXRvcihmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90c19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24oX3N0YXRlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuYXBpLmdldChcIj9wYXRoPS9hZmZpbGlhdGVzL1wiLmNvbmNhdChpZCkpXG4gICAgICAgICAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBrZXk6IFwiZ2V0QWxsQWZmaWxpYXRlc1wiLFxuICAgICAgICAgICAgdmFsdWU6IC8qXG4gICAgYXN5bmMgZ2V0Q29tbWlzc2lvbnMoYWZmaWxpYXRlSWQ6IHN0cmluZyk6IFByb21pc2U8e1xuICAgICAgZGF0YTogQ29tbWlzc2lvbltdO1xuICAgICAgdG90YWxfY291bnQ6IG51bWJlcjtcbiAgICB9PiB7XG4gICAgICByZXR1cm4gdGhpcy5hcGkuZ2V0KGA/cGF0aD0vY29tbWlzc2lvbnNgLCB7XG4gICAgICAgIHBhcmFtczogeyBcbiAgICAgICAgICBwYXRoOiAnL2NvbW1pc3Npb25zJyxcbiAgICAgICAgICBhZmZpbGlhdGVfaWQ6IGFmZmlsaWF0ZUlkIFxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIFxuICAgIGFzeW5jIGdldFN0YXRzKGFmZmlsaWF0ZUlkOiBzdHJpbmcpOiBQcm9taXNlPHtcbiAgICAgIHZpc2l0b3JzOiBudW1iZXI7XG4gICAgICBsZWFkczogbnVtYmVyO1xuICAgICAgY29udmVyc2lvbnM6IG51bWJlcjtcbiAgICB9PiB7XG4gICAgICByZXR1cm4gdGhpcy5hcGkuZ2V0KGA/cGF0aD0vYWZmaWxpYXRlcy8ke2FmZmlsaWF0ZUlkfS9zdGF0c2ApO1xuICAgIH1cbiAgXG4gICAgLy8g6I635Y+W5Y2V5Liq5L2j6YeR6K+m5oOFXG4gICAgYXN5bmMgZ2V0Q29tbWlzc2lvbkJ5SWQoaWQ6IHN0cmluZyk6IFByb21pc2U8Q29tbWlzc2lvbj4ge1xuICAgICAgcmV0dXJuIHRoaXMuYXBpLmdldCgnJywge1xuICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICBwYXRoOiBgL2NvbW1pc3Npb25zLyR7aWR9YCxcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICBcbiAgICAqLyAvLyDojrflj5bmiYDmnInliIbplIDlkZjliJfooahcbiAgICAgICAgICAgIGZ1bmN0aW9uIGdldEFsbEFmZmlsaWF0ZXMoKSB7XG4gICAgICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgICAgICByZXR1cm4gX2FzeW5jX3RvX2dlbmVyYXRvcihmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90c19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24oX3N0YXRlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuYXBpLmdldChcIlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aDogXCIvYWZmaWxpYXRlc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwYW5kOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzdGF0c1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSkoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAga2V5OiBcImdldERhc2hib2FyZERhdGFcIixcbiAgICAgICAgICAgIHZhbHVlOiAvLyDojrflj5bliIbplIDlkZjku6rooajnm5jmlbDmja5cbiAgICAgICAgICAgIGZ1bmN0aW9uIGdldERhc2hib2FyZERhdGEoYWZmaWxpYXRlSWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHJldHVybiBfYXN5bmNfdG9fZ2VuZXJhdG9yKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3RzX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbihfc3RhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgMixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5hcGkuZ2V0KFwiXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoOiBcIi9hZmZpbGlhdGVzL1wiLmNvbmNhdChhZmZpbGlhdGVJZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXSk7XG4gICAgcmV0dXJuIFJld2FyZGZ1bFNlcnZpY2VJbXBsO1xufSgpO1xudmFyIHJld2FyZGZ1bFNlcnZpY2UgPSBuZXcgUmV3YXJkZnVsU2VydmljZUltcGwoKTtcbnZhciBBZmZpbGlhdGVTaWdudXAgPSBmdW5jdGlvbihwYXJhbSkge1xuICAgIHZhciBvblN1Y2Nlc3MgPSBwYXJhbS5vblN1Y2Nlc3M7XG4gICAgdmFyIF9yZWFjdF91c2VTdGF0ZSA9IF9zbGljZWRfdG9fYXJyYXkocmVhY3QudXNlU3RhdGUoe1xuICAgICAgICBlbWFpbDogXCJcIixcbiAgICAgICAgZmlyc3ROYW1lOiBcIlwiLFxuICAgICAgICBsYXN0TmFtZTogXCJcIixcbiAgICAgICAgcGF5cGFsRW1haWw6IFwiXCIsXG4gICAgICAgIGludml0ZUNvZGU6IFwiXCJcbiAgICB9KSwgMiksIGZvcm1EYXRhID0gX3JlYWN0X3VzZVN0YXRlWzBdLCBzZXRGb3JtRGF0YSA9IF9yZWFjdF91c2VTdGF0ZVsxXTtcbiAgICB2YXIgX3JlYWN0X3VzZVN0YXRlMSA9IF9zbGljZWRfdG9fYXJyYXkocmVhY3QudXNlU3RhdGUoZmFsc2UpLCAyKSwgaXNTdWJtaXR0aW5nID0gX3JlYWN0X3VzZVN0YXRlMVswXSwgc2V0SXNTdWJtaXR0aW5nID0gX3JlYWN0X3VzZVN0YXRlMVsxXTtcbiAgICB2YXIgX3JlYWN0X3VzZVN0YXRlMiA9IF9zbGljZWRfdG9fYXJyYXkocmVhY3QudXNlU3RhdGUobnVsbCksIDIpLCBlcnJvciA9IF9yZWFjdF91c2VTdGF0ZTJbMF0sIHNldEVycm9yID0gX3JlYWN0X3VzZVN0YXRlMlsxXTtcbiAgICB2YXIgX3JlYWN0X3VzZVN0YXRlMyA9IF9zbGljZWRfdG9fYXJyYXkocmVhY3QudXNlU3RhdGUoZmFsc2UpLCAyKSwgc3VjY2VzcyA9IF9yZWFjdF91c2VTdGF0ZTNbMF0sIHNldFN1Y2Nlc3MgPSBfcmVhY3RfdXNlU3RhdGUzWzFdO1xuICAgIHZhciBfcmVhY3RfdXNlU3RhdGU0ID0gX3NsaWNlZF90b19hcnJheShyZWFjdC51c2VTdGF0ZShudWxsKSwgMiksIHN1Y2Nlc3NEYXRhID0gX3JlYWN0X3VzZVN0YXRlNFswXSwgc2V0U3VjY2Vzc0RhdGEgPSBfcmVhY3RfdXNlU3RhdGU0WzFdO1xuICAgIHZhciBoYW5kbGVTdWJtaXQgPSAvKiNfX1BVUkVfXyovIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgX3JlZiA9IF9hc3luY190b19nZW5lcmF0b3IoZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgdmFyIHJlc3BvbnNlLCBlcnI7XG4gICAgICAgICAgICByZXR1cm4gX3RzX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbihfc3RhdGUpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2goX3N0YXRlLmxhYmVsKXtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJcXHV7MUY2ODB9IFN0YXJ0aW5nIGZvcm0gc3VibWlzc2lvbi4uLlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiXFx1ezFGNEREfSBGb3JtIERhdGE6XCIsIGZvcm1EYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldElzU3VibWl0dGluZyh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEVycm9yKG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0U3VjY2VzcyhmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRTdWNjZXNzRGF0YShudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9zdGF0ZS5sYWJlbCA9IDE7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIF9zdGF0ZS50cnlzLnB1c2goW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgMyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDVcbiAgICAgICAgICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJcXHV7MUY0RTR9IFNlbmRpbmcgYWZmaWxpYXRlIGNyZWF0aW9uIHJlcXVlc3QuLi5cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV3YXJkZnVsU2VydmljZS5jcmVhdGVBZmZpbGlhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbWFpbDogZm9ybURhdGEuZW1haWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0X25hbWU6IGZvcm1EYXRhLmZpcnN0TmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdF9uYW1lOiBmb3JtRGF0YS5sYXN0TmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF5cGFsX2VtYWlsOiBmb3JtRGF0YS5wYXlwYWxFbWFpbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW52aXRlX2NvZGU6IGZvcm1EYXRhLmludml0ZUNvZGUgfHwgdm9pZCAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX3N0YXRlLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiXFx1MjcwNSBTdWJtaXNzaW9uIHN1Y2Nlc3NmdWwhIFJlc3BvbnNlOlwiLCByZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRTdWNjZXNzRGF0YShyZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRTdWNjZXNzKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgb25TdWNjZXNzID09PSBudWxsIHx8IG9uU3VjY2VzcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb25TdWNjZXNzKHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiXFx1ezFGOUY5fSBDbGVhcmluZyBmb3JtLi4uXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0Rm9ybURhdGEoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtYWlsOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0TmFtZTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0TmFtZTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXlwYWxFbWFpbDogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnZpdGVDb2RlOiBcIlwiXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgMyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA1XG4gICAgICAgICAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgICAgICBlcnIgPSBfc3RhdGUuc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIlxcdTI3NEMgU3VibWlzc2lvbiBmYWlsZWQ6XCIsIGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRFcnJvcihfaW5zdGFuY2VvZihlcnIsIEVycm9yKSA/IGVyci5tZXNzYWdlIDogXCJBbiBlcnJvciBvY2N1cnJlZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgMyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA1XG4gICAgICAgICAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlxcdXsxRjNDMX0gRm9ybSBzdWJtaXNzaW9uIGNvbXBsZXRlZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldElzU3VibWl0dGluZyhmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDdcbiAgICAgICAgICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgMlxuICAgICAgICAgICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiBoYW5kbGVTdWJtaXQoZSkge1xuICAgICAgICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgfTtcbiAgICB9KCk7XG4gICAgdmFyIGhhbmRsZUNoYW5nZSA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgdmFyIF9lX3RhcmdldCA9IGUudGFyZ2V0LCBuYW1lID0gX2VfdGFyZ2V0Lm5hbWUsIHZhbHVlID0gX2VfdGFyZ2V0LnZhbHVlO1xuICAgICAgICBjb25zb2xlLmxvZyhcIlxcdXsxRjRERH0gRmllbGQgQ2hhbmdlOlwiLCB7XG4gICAgICAgICAgICBmaWVsZDogbmFtZSxcbiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgICB9KTtcbiAgICAgICAgc2V0Rm9ybURhdGEoZnVuY3Rpb24ocHJldikge1xuICAgICAgICAgICAgcmV0dXJuIF9vYmplY3Rfc3ByZWFkX3Byb3BzKF9vYmplY3Rfc3ByZWFkKHt9LCBwcmV2KSwgX2RlZmluZV9wcm9wZXJ0eSh7fSwgbmFtZSwgdmFsdWUpKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJmbGV4IGp1c3RpZnktY2VudGVyIGl0ZW1zLWNlbnRlciAgYmctaW5kaWdvLTUwXCIsXG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICBzdWNjZXNzICYmIHN1Y2Nlc3NEYXRhICYmIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImZpeGVkIHRvcC00IHJpZ2h0LTQgYmctZ3JlZW4tMTAwIGJvcmRlciBib3JkZXItZ3JlZW4tNDAwIHRleHQtZ3JlZW4tNzAwIHB4LTQgcHktMyByb3VuZGVkIHNoYWRvdy1sZyBtYXgtdy1tZFwiLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3hzKFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImZsZXggaXRlbXMtc3RhcnRcIixcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcInN2Z1wiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcInctNiBoLTYgbXItMiBtdC0wLjVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsOiBcIm5vbmVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2U6IFwiY3VycmVudENvbG9yXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0JveDogXCIwIDAgMjQgMjRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwicGF0aFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZUxpbmVjYXA6IFwicm91bmRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlTGluZWpvaW46IFwicm91bmRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlV2lkdGg6IFwiMlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkOiBcIk01IDEzbDQgNEwxOSA3XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3hzKFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJwXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJmb250LW1lZGl1bVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiU3VjY2Vzc2Z1bGx5IHJlZ2lzdGVyZWQgYXMgYWZmaWxpYXRlIVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3hzKFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJtdC0yIHRleHQtc21cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcInBcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwic3BhblwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImZvbnQtbWVkaXVtXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiSUQ6XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIgXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzRGF0YS5pZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcInBcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwic3BhblwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImZvbnQtbWVkaXVtXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQ29kZTpcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NEYXRhLmNvZGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NEYXRhLm5hbWUgJiYgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcInBcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwic3BhblwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImZvbnQtbWVkaXVtXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiTmFtZTpcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NEYXRhLm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NEYXRhLmVtYWlsICYmIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeHMoXCJwXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcInNwYW5cIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJmb250LW1lZGl1bVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkVtYWlsOlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiIFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2Vzc0RhdGEuZW1haWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJwXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJtdC0yIHRleHQteHNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlBsZWFzZSBjaGVjayB5b3VyIGVtYWlsIGZvciBjb25maXJtYXRpb24gYW5kIG5leHQgc3RlcHMuXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwiZm9ybVwiLCB7XG4gICAgICAgICAgICAgICAgb25TdWJtaXQ6IGhhbmRsZVN1Ym1pdCxcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwidy1bNDAwcHhdIGJnLWluZGlnby01MCByb3VuZGVkIHNoYWRvdyBwLTNcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcImZpZWxkc2V0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImJvcmRlci00IGJvcmRlci1kb3R0ZWQgYm9yZGVyLWluZGlnby01MDAgcC01XCIsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJsZWdlbmRcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJweC0yIGl0YWxpYyB0ZXh0LWluZGlnby01MDAgLW14LTIgdGV4dC0yeGxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJCZWNvbWUgYW4gQWZmaWxpYXRlIVwiXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yICYmIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImJnLXJlZC01MCBib3JkZXIgYm9yZGVyLXJlZC0zMDAgdGV4dC1yZWQtNTAwIHB4LTQgcHktMyByb3VuZGVkIG1iLTRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJmbGV4IGl0ZW1zLXN0YXJ0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJzdmdcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJ3LTYgaC02IG1yLTIgbXQtMC41IGZsZXgtc2hyaW5rLTBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsOiBcIm5vbmVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2U6IFwiY3VycmVudENvbG9yXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0JveDogXCIwIDAgMjQgMjRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwicGF0aFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZUxpbmVjYXA6IFwicm91bmRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlTGluZWpvaW46IFwicm91bmRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlV2lkdGg6IFwiMlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkOiBcIk02IDE4TDE4IDZNNiA2bDEyIDEyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3hzKFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwiZmxleC0xXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwicFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwiZm9udC1tZWRpdW1cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBlcnJvci5zcGxpdChcIjpcIilbMF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yLmluY2x1ZGVzKFwiOlwiKSAmJiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJwXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJ0ZXh0LXNtIG10LTFcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBlcnJvci5zcGxpdChcIjpcIilbMV0udHJpbSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeHMoXCJkaXZcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJzcGFjZS15LTRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3hzKFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwibGFiZWxcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwidGV4dC14cyBmb250LWJvbGQgdGV4dC1pbmRpZ28tNTAwIGFmdGVyOmNvbnRlbnQtWycqJ10gYWZ0ZXI6dGV4dC1yZWQtNDAwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkVtYWlsIEFkZHJlc3NcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJlbWFpbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcImVtYWlsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBmb3JtRGF0YS5lbWFpbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IGhhbmRsZUNoYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJ3LWZ1bGwgcC0yIG10LTEgb3V0bGluZS1ub25lIHJpbmctbm9uZSBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1pbmRpZ28tNTAwIHJvdW5kZWRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3hzKFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwibGFiZWxcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwidGV4dC14cyBmb250LWJvbGQgdGV4dC1pbmRpZ28tNTAwIGFmdGVyOmNvbnRlbnQtWycqJ10gYWZ0ZXI6dGV4dC1yZWQtNDAwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkZpcnN0IE5hbWVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJ0ZXh0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiZmlyc3ROYW1lXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBmb3JtRGF0YS5maXJzdE5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBoYW5kbGVDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwidy1mdWxsIHAtMiBtdC0xIG91dGxpbmUtbm9uZSByaW5nLW5vbmUgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctaW5kaWdvLTUwMCByb3VuZGVkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcImxhYmVsXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcInRleHQteHMgZm9udC1ib2xkIHRleHQtaW5kaWdvLTUwMCBhZnRlcjpjb250ZW50LVsnKiddIGFmdGVyOnRleHQtcmVkLTQwMFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJMYXN0IE5hbWVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJ0ZXh0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwibGFzdE5hbWVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGZvcm1EYXRhLmxhc3ROYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogaGFuZGxlQ2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcInctZnVsbCBwLTIgbXQtMSBvdXRsaW5lLW5vbmUgcmluZy1ub25lIGZvY3VzOnJpbmctMiBmb2N1czpyaW5nLWluZGlnby01MDAgcm91bmRlZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeHMoXCJkaXZcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJsYWJlbFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJ0ZXh0LXhzIGZvbnQtYm9sZCB0ZXh0LWluZGlnby01MDAgYWZ0ZXI6Y29udGVudC1bJyonXSBhZnRlcjp0ZXh0LXJlZC00MDBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiUGF5UGFsIEVtYWlsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZW1haWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJwYXlwYWxFbWFpbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZm9ybURhdGEucGF5cGFsRW1haWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBoYW5kbGVDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwidy1mdWxsIHAtMiBtdC0xIG91dGxpbmUtbm9uZSByaW5nLW5vbmUgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctaW5kaWdvLTUwMCByb3VuZGVkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcImxhYmVsXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcInRleHQteHMgZm9udC1ib2xkIHRleHQtaW5kaWdvLTUwMFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJJbnZpdGUgQ29kZSAoT3B0aW9uYWwpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcImludml0ZUNvZGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGZvcm1EYXRhLmludml0ZUNvZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlOiBoYW5kbGVDaGFuZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJ3LWZ1bGwgcC0yIG10LTEgb3V0bGluZS1ub25lIHJpbmctbm9uZSBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1pbmRpZ28tNTAwIHJvdW5kZWRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJidXR0b25cIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJzdWJtaXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiBpc1N1Ym1pdHRpbmcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwidy1mdWxsIHJvdW5kZWQgYmctaW5kaWdvLTUwMCB0ZXh0LWluZGlnby01MCBwLTIgdGV4dC1jZW50ZXIgZm9udC1ib2xkIGhvdmVyOmJnLWluZGlnby00MDAgbXQtNFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IGlzU3VibWl0dGluZyA/IC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeHMoXCJkaXZcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeHMoXCJzdmdcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImFuaW1hdGUtc3BpbiBoLTUgdy01IG1yLTNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdCb3g6IFwiMCAwIDI0IDI0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcImNpcmNsZVwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJvcGFjaXR5LTI1XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN4OiBcIjEyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN5OiBcIjEyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHI6IFwiMTBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlOiBcImN1cnJlbnRDb2xvclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2VXaWR0aDogXCI0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw6IFwibm9uZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwicGF0aFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJvcGFjaXR5LTc1XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw6IFwiY3VycmVudENvbG9yXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ6IFwiTTQgMTJhOCA4IDAgMDE4LThWMEM1LjM3MyAwIDAgNS4zNzMgMCAxMmg0em0yIDUuMjkxQTcuOTYyIDcuOTYyIDAgMDE0IDEySDBjMCAzLjA0MiAxLjEzNSA1LjgyNCAzIDcuOTM4bDMtMi42NDd6XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwic3BhblwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJTdWJtaXR0aW5nLi4uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSA6IFwiU3VibWl0IEFwcGxpY2F0aW9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIF1cbiAgICB9KTtcbn07XG52YXIgQWZmaWxpYXRlRGFzaGJvYXJkQ2FyZCA9IGZ1bmN0aW9uKHBhcmFtKSB7XG4gICAgdmFyIGNvbW1pc3Npb24gPSBwYXJhbS5jb21taXNzaW9uLCBvblNoYXJlID0gcGFyYW0ub25TaGFyZTtcbiAgICB2YXIgbGlua3MgPSBjb21taXNzaW9uLmxpbmtzLCBjb21taXNzaW9uX3N0YXRzID0gY29tbWlzc2lvbi5jb21taXNzaW9uX3N0YXRzO1xuICAgIHZhciBwcmltYXJ5TGluayA9IGxpbmtzWzBdO1xuICAgIHZhciBzdGF0cyA9IGNvbW1pc3Npb25fc3RhdHMuY3VycmVuY2llcy5VU0Q7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJiZy13aGl0ZSByb3VuZGVkLWxnIHNoYWRvdy1tZCBob3ZlcjpzaGFkb3ctbGcgdHJhbnNpdGlvbi1zaGFkb3cgZHVyYXRpb24tMzAwIHAtNiBzcGFjZS15LTZcIixcbiAgICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeHMoXCJmaWVsZHNldFwiLCB7XG4gICAgICAgICAgICBjbGFzc05hbWU6IFwiYm9yZGVyLTQgYm9yZGVyLWRvdHRlZCBib3JkZXItaW5kaWdvLTUwMCBwLTVcIixcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwibGVnZW5kXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcInB4LTIgaXRhbGljIHRleHQtaW5kaWdvLTUwMCAtbXgtMiB0ZXh0LTJ4bFwiLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJQZXJzb25hbCBJbmZvcm1hdGlvblwiXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJzcGFjZS15LTRcIixcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcImgyXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwidGV4dC1sZyBmb250LXNlbWlib2xkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiUGVyc29uYWwgSW5mb3JtYXRpb25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3hzKFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwic3BhY2UteS0zXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwic3ZnXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcInctNSBoLTUgdGV4dC1ncmF5LTUwMFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsOiBcIm5vbmVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlOiBcImN1cnJlbnRDb2xvclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3Qm94OiBcIjAgMCAyNCAyNFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwicGF0aFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2VMaW5lY2FwOiBcInJvdW5kXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2VMaW5lam9pbjogXCJyb3VuZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlV2lkdGg6IFwiMlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZDogXCJNMTYgN2E0IDQgMCAxMS04IDAgNCA0IDAgMDE4IDB6TTEyIDE0YTcgNyAwIDAwLTcgN2gxNGE3IDcgMCAwMC03LTd6XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJzcGFuXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiXCIuY29uY2F0KGNvbW1pc3Npb24uZmlyc3RfbmFtZSwgXCIgXCIpLmNvbmNhdChjb21taXNzaW9uLmxhc3RfbmFtZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwic3ZnXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcInctNSBoLTUgdGV4dC1ncmF5LTUwMFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsOiBcIm5vbmVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlOiBcImN1cnJlbnRDb2xvclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3Qm94OiBcIjAgMCAyNCAyNFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwicGF0aFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2VMaW5lY2FwOiBcInJvdW5kXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2VMaW5lam9pbjogXCJyb3VuZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlV2lkdGg6IFwiMlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZDogXCJNMyA4bDcuODkgNS4yNmEyIDIgMCAwMDIuMjIgMEwyMSA4TTUgMTloMTRhMiAyIDAgMDAyLTJWN2EyIDIgMCAwMC0yLTJINWEyIDIgMCAwMC0yIDJ2MTBhMiAyIDAgMDAyIDJ6XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJzcGFuXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IGNvbW1pc3Npb24uZW1haWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwic3ZnXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcInctNSBoLTUgdGV4dC1ncmF5LTUwMFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsOiBcIm5vbmVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlOiBcImN1cnJlbnRDb2xvclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3Qm94OiBcIjAgMCAyNCAyNFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwicGF0aFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2VMaW5lY2FwOiBcInJvdW5kXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2VMaW5lam9pbjogXCJyb3VuZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlV2lkdGg6IFwiMlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZDogXCJNMTcgOVY3YTIgMiAwIDAwLTItMkg1YTIgMiAwIDAwLTIgMnY2YTIgMiAwIDAwMiAyaDJtMiA0aDEwYTIgMiAwIDAwMi0ydi02YTIgMiAwIDAwLTItMkg5YTIgMiAwIDAwLTIgMnY2YTIgMiAwIDAwMiAyem03LTVhMiAyIDAgMTEtNCAwIDIgMiAwIDAxNCAwelwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwic3BhblwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBjb21taXNzaW9uLnBheXBhbF9lbWFpbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3hzKFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJzdmdcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwidy01IGgtNSB0ZXh0LWdyYXktNTAwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw6IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2U6IFwiY3VycmVudENvbG9yXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdCb3g6IFwiMCAwIDI0IDI0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJwYXRoXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZUxpbmVjYXA6IFwicm91bmRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZUxpbmVqb2luOiBcInJvdW5kXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2VXaWR0aDogXCIyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkOiBcIk04IDdWM204IDRWM20tOSA4aDEwTTUgMjFoMTRhMiAyIDAgMDAyLTJWN2EyIDIgMCAwMC0yLTJINWEyIDIgMCAwMC0yIDJ2MTJhMiAyIDAgMDAyIDJ6XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJzcGFuXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IG5ldyBEYXRlKGNvbW1pc3Npb24uY3JlYXRlZF9hdCkudG9Mb2NhbGVEYXRlU3RyaW5nKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3hzKFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcInNwYWNlLXktNFwiLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwiaDJcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJSZWZlcnJhbCBMaW5rXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImZsZXggaXRlbXMtY2VudGVyIGdhcC0yIGJnLWdyYXktNTAgcC0zIHJvdW5kZWRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcInRleHRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IChwcmltYXJ5TGluayA9PT0gbnVsbCB8fCBwcmltYXJ5TGluayA9PT0gdm9pZCAwID8gdm9pZCAwIDogcHJpbWFyeUxpbmsudXJsKSB8fCBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImZsZXgtMSBiZy10cmFuc3BhcmVudCBvdXRsaW5lLW5vbmVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwiYnV0dG9uXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IG9uU2hhcmUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwidGV4dC1ibHVlLTYwMCBob3Zlcjp0ZXh0LWJsdWUtODAwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwic3ZnXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwidy01IGgtNVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw6IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZTogXCJjdXJyZW50Q29sb3JcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3Qm94OiBcIjAgMCAyNCAyNFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJwYXRoXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlTGluZWNhcDogXCJyb3VuZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2VMaW5lam9pbjogXCJyb3VuZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2VXaWR0aDogXCIyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ6IFwiTTguNjg0IDEzLjM0MkM4Ljg4NiAxMi45MzggOSAxMi40ODIgOSAxMmMwLS40ODItLjExNC0uOTM4LS4zMTYtMS4zNDJtMCAyLjY4NGEzIDMgMCAxMTAtMi42ODRtMCAyLjY4NGw2LjYzMiAzLjMxNm0tNi42MzItNmw2LjYzMi0zLjMxNm0wIDBhMyAzIDAgMTA1LjM2Ny0yLjY4NCAzIDMgMCAwMC01LjM2NyAyLjY4NHptMCA5LjMxNmEzIDMgMCAxMDUuMzY4IDIuNjg0IDMgMyAwIDAwLTUuMzY4LTIuNjg0elwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3hzKFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwiZ3JpZCBncmlkLWNvbHMtMyBnYXAtNCB0ZXh0LWNlbnRlclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeHMoXCJkaXZcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJkaXZcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwidGV4dC1zbSB0ZXh0LWdyYXktNTAwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlZpc2l0b3JzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3goXCJkaXZcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwiZm9udC1zZW1pYm9sZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogY29tbWlzc2lvbi52aXNpdG9yc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3hzKFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcInRleHQtc20gdGV4dC1ncmF5LTUwMFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJMZWFkc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImZvbnQtc2VtaWJvbGRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IGNvbW1pc3Npb24ubGVhZHNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJ0ZXh0LXNtIHRleHQtZ3JheS01MDBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQ29udmVyc2lvbnNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJmb250LXNlbWlib2xkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBjb21taXNzaW9uLmNvbnZlcnNpb25zXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJzcGFjZS15LTRcIixcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeChcImgyXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwidGV4dC1sZyBmb250LXNlbWlib2xkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiSW5jb21lIFN0YXR1c1wiXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeHMoXCJkaXZcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJncmlkIGdyaWQtY29scy0yIGdhcC00XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4cyhcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwiYmctZ3JlZW4tNTAgcC00IHJvdW5kZWQtbGdcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcInRleHQtc20gdGV4dC1ncmVlbi02MDBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiVG90YWwgSW5jb21lXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3hzKFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcInRleHQtMnhsIGZvbnQtYm9sZCB0ZXh0LWdyZWVuLTcwMFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoc3RhdHMudG90YWwuY2VudHMgLyAxMDApLnRvRml4ZWQoMilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4UnVudGltZS5qc3hzKFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJiZy15ZWxsb3ctNTAgcC00IHJvdW5kZWQtbGdcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeFJ1bnRpbWUuanN4KFwiZGl2XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcInRleHQtc20gdGV4dC15ZWxsb3ctNjAwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlBlbmRpbmdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hSdW50aW1lLmpzeHMoXCJkaXZcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwidGV4dC0yeGwgZm9udC1ib2xkIHRleHQteWVsbG93LTcwMFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoc3RhdHMudW5wYWlkLmNlbnRzIC8gMTAwKS50b0ZpeGVkKDIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgXVxuICAgICAgICB9KVxuICAgIH0pO1xufTtcbmV4cG9ydHMuQWZmaWxpYXRlRGFzaGJvYXJkQ2FyZCA9IEFmZmlsaWF0ZURhc2hib2FyZENhcmQ7XG5leHBvcnRzLkFmZmlsaWF0ZVNpZ251cCA9IEFmZmlsaWF0ZVNpZ251cDtcbmV4cG9ydHMuUmVmZXJyYWxMaW5rID0gUmVmZXJyYWxMaW5rO1xuZXhwb3J0cy5SZXdhcmRmdWxQcm92aWRlciA9IFJld2FyZGZ1bFByb3ZpZGVyO1xuZXhwb3J0cy5pbml0UmV3YXJkZnVsID0gaW5pdFJld2FyZGZ1bDtcbmV4cG9ydHMucmV3YXJkZnVsU2VydmljZSA9IHJld2FyZGZ1bFNlcnZpY2U7XG5leHBvcnRzLnVzZVJld2FyZGZ1bCA9IHVzZVJld2FyZGZ1bDtcbiJdLCJuYW1lcyI6WyJfYXJyYXlfbGlrZV90b19hcnJheSIsImFyciIsImxlbiIsImxlbmd0aCIsImkiLCJhcnIyIiwiQXJyYXkiLCJfYXJyYXlfd2l0aF9ob2xlcyIsImlzQXJyYXkiLCJhc3luY0dlbmVyYXRvclN0ZXAiLCJnZW4iLCJyZXNvbHZlIiwicmVqZWN0IiwiX25leHQiLCJfdGhyb3ciLCJrZXkiLCJhcmciLCJpbmZvIiwidmFsdWUiLCJlcnJvciIsImRvbmUiLCJQcm9taXNlIiwidGhlbiIsIl9hc3luY190b19nZW5lcmF0b3IiLCJmbiIsInNlbGYiLCJhcmdzIiwiYXJndW1lbnRzIiwiYXBwbHkiLCJlcnIiLCJ1bmRlZmluZWQiLCJfY2xhc3NfY2FsbF9jaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiX2NyZWF0ZV9jbGFzcyIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsInByb3RvdHlwZSIsIl9kZWZpbmVfcHJvcGVydHkiLCJvYmoiLCJfaW5zdGFuY2VvZiIsImxlZnQiLCJyaWdodCIsIlN5bWJvbCIsImhhc0luc3RhbmNlIiwiX2l0ZXJhYmxlX3RvX2FycmF5X2xpbWl0IiwiX2kiLCJpdGVyYXRvciIsIl9hcnIiLCJfbiIsIl9kIiwiX3MiLCJfZSIsImNhbGwiLCJuZXh0IiwicHVzaCIsIl9ub25faXRlcmFibGVfcmVzdCIsIl9vYmplY3Rfc3ByZWFkIiwic291cmNlIiwib3duS2V5cyIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJjb25jYXQiLCJmaWx0ZXIiLCJzeW0iLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJmb3JFYWNoIiwib2JqZWN0IiwiZW51bWVyYWJsZU9ubHkiLCJzeW1ib2xzIiwiX29iamVjdF9zcHJlYWRfcHJvcHMiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsIl9zbGljZWRfdG9fYXJyYXkiLCJfdW5zdXBwb3J0ZWRfaXRlcmFibGVfdG9fYXJyYXkiLCJvIiwibWluTGVuIiwibiIsInRvU3RyaW5nIiwic2xpY2UiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJmcm9tIiwidGVzdCIsIl90c19nZW5lcmF0b3IiLCJ0aGlzQXJnIiwiYm9keSIsImYiLCJ5IiwidCIsImciLCJfIiwibGFiZWwiLCJzZW50IiwidHJ5cyIsIm9wcyIsInZlcmIiLCJ2Iiwic3RlcCIsIm9wIiwicG9wIiwiZSIsInJlYWN0IiwicmVxdWlyZSIsImpzeFJ1bnRpbWUiLCJheGlvcyIsIl9pbnRlcm9wRGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiYXhpb3NfX2RlZmF1bHQiLCJpbml0UmV3YXJkZnVsIiwicHVibGljS2V5IiwiZXhpc3RpbmdTY3JpcHQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb25zb2xlIiwibG9nIiwic2NyaXB0IiwiY3JlYXRlRWxlbWVudCIsImFzeW5jIiwic3JjIiwiZGF0YXNldCIsInJld2FyZGZ1bCIsIm9ubG9hZCIsIm9uZXJyb3IiLCJoZWFkIiwiYXBwZW5kQ2hpbGQiLCJSZXdhcmRmdWxDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsInZpc2l0b3IiLCJpc0xvYWRpbmciLCJ1c2VSZXdhcmRmdWwiLCJjb250ZXh0IiwidXNlQ29udGV4dCIsIkVycm9yIiwiUmV3YXJkZnVsUHJvdmlkZXIiLCJwYXJhbSIsImNvbmZpZyIsImNoaWxkcmVuIiwiX3JlYWN0X3VzZVN0YXRlIiwidXNlU3RhdGUiLCJzZXRWaXNpdG9yIiwiX3JlYWN0X3VzZVN0YXRlMSIsInNldElzTG9hZGluZyIsIl9yZWFjdF91c2VTdGF0ZTIiLCJzZXRFcnJvciIsInVzZUVmZmVjdCIsImluaXRpYWxpemVSZXdhcmRmdWwiLCJfcmVmIiwiYXR0ZW1wdHMiLCJtYXhBdHRlbXB0cyIsImNoZWNrUmV3YXJkZnVsIiwiX3N0YXRlIiwid2luZG93IiwiYWZmaWxpYXRlIiwicmVmZXJyYWxDb2RlIiwicmVmZXJyYWwiLCJpc1JlZmVycmVkIiwic2V0VGltZW91dCIsImpzeHMiLCJqc3giLCJtZXNzYWdlIiwiUHJvdmlkZXIiLCJSZWZlcnJhbExpbmsiLCJfcGFyYW1fY2xhc3NOYW1lIiwiY2xhc3NOYW1lIiwiYmFzZVVybCIsIl92aXNpdG9yX2FmZmlsaWF0ZSIsIl91c2VSZXdhcmRmdWwiLCJjb2RlIiwicmVmZXJyYWxVcmwiLCJpbmNsdWRlcyIsImhyZWYiLCJyZWwiLCJSZXdhcmRmdWxTZXJ2aWNlSW1wbCIsImFwaSIsImNyZWF0ZSIsImJhc2VVUkwiLCJpbnRlcmNlcHRvcnMiLCJyZXNwb25zZSIsInVzZSIsImRhdGEiLCJfZXJyb3JfcmVzcG9uc2VfZGF0YSIsImNyZWF0ZUFmZmlsaWF0ZSIsIl90aGlzIiwicG9zdCIsImdldEFmZmlsaWF0ZSIsImlkIiwiZ2V0IiwiZ2V0QWxsQWZmaWxpYXRlcyIsInBhcmFtcyIsInBhdGgiLCJleHBhbmQiLCJnZXREYXNoYm9hcmREYXRhIiwiYWZmaWxpYXRlSWQiLCJyZXdhcmRmdWxTZXJ2aWNlIiwiQWZmaWxpYXRlU2lnbnVwIiwib25TdWNjZXNzIiwiZW1haWwiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInBheXBhbEVtYWlsIiwiaW52aXRlQ29kZSIsImZvcm1EYXRhIiwic2V0Rm9ybURhdGEiLCJpc1N1Ym1pdHRpbmciLCJzZXRJc1N1Ym1pdHRpbmciLCJfcmVhY3RfdXNlU3RhdGUzIiwic3VjY2VzcyIsInNldFN1Y2Nlc3MiLCJfcmVhY3RfdXNlU3RhdGU0Iiwic3VjY2Vzc0RhdGEiLCJzZXRTdWNjZXNzRGF0YSIsImhhbmRsZVN1Ym1pdCIsInByZXZlbnREZWZhdWx0IiwiZmlyc3RfbmFtZSIsImxhc3RfbmFtZSIsInBheXBhbF9lbWFpbCIsImludml0ZV9jb2RlIiwiaGFuZGxlQ2hhbmdlIiwiX2VfdGFyZ2V0IiwiZmllbGQiLCJwcmV2IiwiZmlsbCIsInN0cm9rZSIsInZpZXdCb3giLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iLCJzdHJva2VXaWR0aCIsImQiLCJvblN1Ym1pdCIsInNwbGl0IiwidHJpbSIsInR5cGUiLCJvbkNoYW5nZSIsInJlcXVpcmVkIiwiZGlzYWJsZWQiLCJjeCIsImN5IiwiciIsIkFmZmlsaWF0ZURhc2hib2FyZENhcmQiLCJjb21taXNzaW9uIiwib25TaGFyZSIsImxpbmtzIiwiY29tbWlzc2lvbl9zdGF0cyIsInByaW1hcnlMaW5rIiwic3RhdHMiLCJjdXJyZW5jaWVzIiwiVVNEIiwiRGF0ZSIsImNyZWF0ZWRfYXQiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJyZWFkT25seSIsInVybCIsIm9uQ2xpY2siLCJ2aXNpdG9ycyIsImxlYWRzIiwiY29udmVyc2lvbnMiLCJ0b3RhbCIsImNlbnRzIiwidG9GaXhlZCIsInVucGFpZCIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/../dist/index.js\n"));

/***/ })

});