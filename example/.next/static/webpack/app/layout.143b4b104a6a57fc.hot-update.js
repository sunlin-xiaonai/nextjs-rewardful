"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/../dist/index.js":
/*!************************!*\
  !*** ../dist/index.js ***!
  \************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$();\n\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _async_to_generator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n        return !!right[Symbol.hasInstance](left);\n    } else {\n        return left instanceof right;\n    }\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _object_spread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _define_property(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) {\n            symbols = symbols.filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n            });\n        }\n        keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _object_spread_props(target, source) {\n    source = source != null ? source : {};\n    if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n        ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction _ts_generator(thisArg, body) {\n    var f, y, t, g, _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    };\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nvar react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nvar axios = __webpack_require__(/*! axios */ \"(app-pages-browser)/../node_modules/axios/dist/browser/axios.cjs\");\nfunction _interopDefault(e) {\n    return e && e.__esModule ? e : {\n        default: e\n    };\n}\nvar axios__default = /*#__PURE__*/ _interopDefault(axios);\n// src/components/RewardfulProvider.tsx\n// src/utils/rewardful.ts\nvar initRewardful = function(publicKey) {\n    if (false) {}\n    var existingScript = document.querySelector('script[data-rewardful=\"'.concat(publicKey, '\"]'));\n    if (existingScript) {\n        console.log(\"Rewardful script already exists\");\n        return;\n    }\n    console.log(\"Adding Rewardful script with key:\", publicKey);\n    var script = document.createElement(\"script\");\n    script.async = true;\n    script.src = \"https://r.wdfl.co/rw.js\";\n    script.dataset.rewardful = publicKey;\n    script.onload = function() {\n        console.log(\"Rewardful script loaded\");\n    };\n    script.onerror = function(error) {\n        console.error(\"Error loading Rewardful script:\", error);\n    };\n    document.head.appendChild(script);\n};\nvar RewardfulContext = react.createContext({\n    visitor: null,\n    isLoading: true,\n    error: null\n});\nvar useRewardful = function() {\n    _s();\n    var context = react.useContext(RewardfulContext);\n    if (!context) {\n        throw new Error(\"useRewardful must be used within a RewardfulProvider\");\n    }\n    return context;\n};\n_s(useRewardful, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar RewardfulProvider = function(param) {\n    _s1();\n    var config = param.config, children = param.children;\n    var _react_useState = _sliced_to_array(react.useState(null), 2), visitor = _react_useState[0], setVisitor = _react_useState[1];\n    var _react_useState1 = _sliced_to_array(react.useState(true), 2), isLoading = _react_useState1[0], setIsLoading = _react_useState1[1];\n    var _react_useState2 = _sliced_to_array(react.useState(null), 2), error = _react_useState2[0], setError = _react_useState2[1];\n    react.useEffect(function() {\n        console.log(\"Starting Rewardful initialization...\");\n        var initializeRewardful = /*#__PURE__*/ function() {\n            var _ref = _async_to_generator(function() {\n                var attempts, maxAttempts, checkRewardful;\n                return _ts_generator(this, function(_state) {\n                    try {\n                        console.log(\"Config:\", config);\n                        initRewardful(config.publicKey);\n                        attempts = 0;\n                        maxAttempts = 10;\n                        checkRewardful = function() {\n                            console.log(\"Checking Rewardful...\", attempts);\n                            if (window.rewardful) {\n                                console.log(\"Rewardful loaded:\", window.rewardful);\n                                setVisitor({\n                                    affiliate: window.rewardful.affiliate,\n                                    referralCode: window.rewardful.referral,\n                                    isReferred: !!window.rewardful.referral\n                                });\n                                setIsLoading(false);\n                            } else {\n                                attempts++;\n                                if (attempts < maxAttempts) {\n                                    setTimeout(checkRewardful, 500);\n                                } else {\n                                    setError(new Error(\"Rewardful initialization timeout\"));\n                                    setIsLoading(false);\n                                }\n                            }\n                        };\n                        checkRewardful();\n                    } catch (err) {\n                        console.error(\"Rewardful initialization error:\", err);\n                        setError(_instanceof(err, Error) ? err : new Error(\"Failed to initialize Rewardful\"));\n                        setIsLoading(false);\n                    }\n                    return [\n                        2\n                    ];\n                });\n            });\n            return function initializeRewardful() {\n                return _ref.apply(this, arguments);\n            };\n        }();\n        initializeRewardful();\n    }, [\n        config.publicKey\n    ]);\n    if (isLoading) {\n        return /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n            children: [\n                /* @__PURE__ */ jsxRuntime.jsx(\"p\", {\n                    children: \"Loading Rewardful...\"\n                }),\n                /* @__PURE__ */ jsxRuntime.jsxs(\"p\", {\n                    children: [\n                        \"Public Key: \",\n                        config.publicKey\n                    ]\n                })\n            ]\n        });\n    }\n    if (error) {\n        return /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n            children: [\n                /* @__PURE__ */ jsxRuntime.jsxs(\"p\", {\n                    children: [\n                        \"Error initializing Rewardful: \",\n                        error.message\n                    ]\n                }),\n                /* @__PURE__ */ jsxRuntime.jsxs(\"p\", {\n                    children: [\n                        \"Public Key: \",\n                        config.publicKey\n                    ]\n                })\n            ]\n        });\n    }\n    return /* @__PURE__ */ jsxRuntime.jsx(RewardfulContext.Provider, {\n        value: {\n            visitor: visitor,\n            isLoading: isLoading,\n            error: error\n        },\n        children: children\n    });\n};\n_s1(RewardfulProvider, \"9Kati/WcapwssF6sBnrr9qeLaNc=\");\n_c = RewardfulProvider;\nvar ReferralLink = function(param) {\n    _s2();\n    var _param_className = param.className, className = _param_className === void 0 ? \"\" : _param_className, baseUrl = param.baseUrl, children = param.children;\n    var _visitor_affiliate;\n    var _useRewardful = useRewardful(), visitor = _useRewardful.visitor, isLoading = _useRewardful.isLoading;\n    if (isLoading) {\n        return /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n            children: \"Loading...\"\n        });\n    }\n    var referralCode = visitor === null || visitor === void 0 ? void 0 : (_visitor_affiliate = visitor.affiliate) === null || _visitor_affiliate === void 0 ? void 0 : _visitor_affiliate.code;\n    var referralUrl = referralCode ? \"\".concat(baseUrl).concat(baseUrl.includes(\"?\") ? \"&\" : \"?\", \"via=\").concat(referralCode) : baseUrl;\n    return /* @__PURE__ */ jsxRuntime.jsx(\"a\", {\n        href: referralUrl,\n        className: className,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: children || referralUrl\n    });\n};\n_s2(ReferralLink, \"8ooaBxGSoewHTNXe2KBSRtNIfKQ=\", false, function() {\n    return [\n        useRewardful,\n        useRewardful,\n        useRewardful\n    ];\n});\n_c1 = ReferralLink;\nvar RewardfulServiceImpl = /*#__PURE__*/ function() {\n    function RewardfulServiceImpl() {\n        _class_call_check(this, RewardfulServiceImpl);\n        this.api = axios__default.default.create({\n            baseURL: \"/api/rewardful\"\n        });\n        this.api.interceptors.response.use(function(response) {\n            return response.data;\n        }, function(error) {\n            if (error.response) {\n                var _error_response_data;\n                throw new Error(((_error_response_data = error.response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.error) || \"API request failed\");\n            }\n            throw error;\n        });\n    }\n    _create_class(RewardfulServiceImpl, [\n        {\n            key: \"createAffiliate\",\n            value: function createAffiliate(data) {\n                var _this = this;\n                return _async_to_generator(function() {\n                    return _ts_generator(this, function(_state) {\n                        return [\n                            2,\n                            _this.api.post(\"?path=/affiliates\", data)\n                        ];\n                    });\n                })();\n            }\n        },\n        {\n            key: \"getAffiliate\",\n            value: function getAffiliate(id) {\n                var _this = this;\n                return _async_to_generator(function() {\n                    return _ts_generator(this, function(_state) {\n                        return [\n                            2,\n                            _this.api.get(\"?path=/affiliates/\".concat(id))\n                        ];\n                    });\n                })();\n            }\n        },\n        {\n            key: \"getAllAffiliates\",\n            value: /*\n    async getCommissions(affiliateId: string): Promise<{\n      data: Commission[];\n      total_count: number;\n    }> {\n      return this.api.get(`?path=/commissions`, {\n        params: { \n          path: '/commissions',\n          affiliate_id: affiliateId \n        }\n      });\n    }\n  \n    async getStats(affiliateId: string): Promise<{\n      visitors: number;\n      leads: number;\n      conversions: number;\n    }> {\n      return this.api.get(`?path=/affiliates/${affiliateId}/stats`);\n    }\n  \n    // 获取单个佣金详情\n    async getCommissionById(id: string): Promise<Commission> {\n      return this.api.get('', {\n        params: {\n          path: `/commissions/${id}`,\n        }\n      });\n    }\n  \n    */ // 获取所有分销员列表\n            function getAllAffiliates() {\n                var _this = this;\n                return _async_to_generator(function() {\n                    return _ts_generator(this, function(_state) {\n                        return [\n                            2,\n                            _this.api.get(\"\", {\n                                params: {\n                                    path: \"/affiliates\",\n                                    expand: [\n                                        \"stats\"\n                                    ]\n                                }\n                            })\n                        ];\n                    });\n                })();\n            }\n        },\n        {\n            key: \"getDashboardData\",\n            value: function getDashboardData(affiliateId) {\n                var _this = this;\n                return _async_to_generator(function() {\n                    return _ts_generator(this, function(_state) {\n                        return [\n                            2,\n                            _this.api.get(\"\", {\n                                params: {\n                                    path: \"/affiliates/\".concat(affiliateId)\n                                }\n                            })\n                        ];\n                    });\n                })();\n            }\n        }\n    ]);\n    return RewardfulServiceImpl;\n}();\nvar rewardfulService = new RewardfulServiceImpl();\nvar AffiliateSignup = function(param) {\n    _s3();\n    var onSuccess = param.onSuccess;\n    var _react_useState = _sliced_to_array(react.useState({\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        paypalEmail: \"\",\n        inviteCode: \"\"\n    }), 2), formData = _react_useState[0], setFormData = _react_useState[1];\n    var _react_useState1 = _sliced_to_array(react.useState(false), 2), isSubmitting = _react_useState1[0], setIsSubmitting = _react_useState1[1];\n    var _react_useState2 = _sliced_to_array(react.useState(null), 2), error = _react_useState2[0], setError = _react_useState2[1];\n    var _react_useState3 = _sliced_to_array(react.useState(false), 2), success = _react_useState3[0], setSuccess = _react_useState3[1];\n    var _react_useState4 = _sliced_to_array(react.useState(null), 2), successData = _react_useState4[0], setSuccessData = _react_useState4[1];\n    var handleSubmit = /*#__PURE__*/ function() {\n        var _ref = _async_to_generator(function(e) {\n            var response, err;\n            return _ts_generator(this, function(_state) {\n                switch(_state.label){\n                    case 0:\n                        e.preventDefault();\n                        console.log(\"\\uD83D\\uDE80 Starting form submission...\");\n                        console.log(\"\\uD83D\\uDCDD Form Data:\", formData);\n                        setIsSubmitting(true);\n                        setError(null);\n                        setSuccess(false);\n                        setSuccessData(null);\n                        _state.label = 1;\n                    case 1:\n                        _state.trys.push([\n                            1,\n                            3,\n                            4,\n                            5\n                        ]);\n                        console.log(\"\\uD83D\\uDCE4 Sending affiliate creation request...\");\n                        return [\n                            4,\n                            rewardfulService.createAffiliate({\n                                email: formData.email,\n                                first_name: formData.firstName,\n                                last_name: formData.lastName,\n                                paypal_email: formData.paypalEmail,\n                                invite_code: formData.inviteCode || void 0\n                            })\n                        ];\n                    case 2:\n                        response = _state.sent();\n                        console.log(\"✅ Submission successful! Response:\", response);\n                        setSuccessData(response);\n                        setSuccess(true);\n                        onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(response);\n                        console.log(\"\\uD83E\\uDDF9 Clearing form...\");\n                        setFormData({\n                            email: \"\",\n                            firstName: \"\",\n                            lastName: \"\",\n                            paypalEmail: \"\",\n                            inviteCode: \"\"\n                        });\n                        return [\n                            3,\n                            5\n                        ];\n                    case 3:\n                        err = _state.sent();\n                        console.error(\"❌ Submission failed:\", err);\n                        setError(_instanceof(err, Error) ? err.message : \"An error occurred\");\n                        return [\n                            3,\n                            5\n                        ];\n                    case 4:\n                        console.log(\"\\uD83C\\uDFC1 Form submission completed\");\n                        setIsSubmitting(false);\n                        return [\n                            7\n                        ];\n                    case 5:\n                        return [\n                            2\n                        ];\n                }\n            });\n        });\n        return function handleSubmit(e) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var handleChange = function(e) {\n        var _e_target = e.target, name = _e_target.name, value = _e_target.value;\n        console.log(\"\\uD83D\\uDCDD Field Change:\", {\n            field: name,\n            value: value\n        });\n        setFormData(function(prev) {\n            return _object_spread_props(_object_spread({}, prev), _define_property({}, name, value));\n        });\n    };\n    return /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n        className: \"flex justify-center items-center bg-gray-1\",\n        children: [\n            success && successData && /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                className: \"fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded shadow-lg max-w-md\",\n                children: /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                    className: \"flex items-start\",\n                    children: [\n                        /* @__PURE__ */ jsxRuntime.jsx(\"svg\", {\n                            className: \"w-6 h-6 mr-2 mt-0.5\",\n                            fill: \"none\",\n                            stroke: \"currentColor\",\n                            viewBox: \"0 0 24 24\",\n                            children: /* @__PURE__ */ jsxRuntime.jsx(\"path\", {\n                                strokeLinecap: \"round\",\n                                strokeLinejoin: \"round\",\n                                strokeWidth: \"2\",\n                                d: \"M5 13l4 4L19 7\"\n                            })\n                        }),\n                        /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                            children: [\n                                /* @__PURE__ */ jsxRuntime.jsx(\"p\", {\n                                    className: \"font-medium\",\n                                    children: \"Successfully registered as affiliate!\"\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    className: \"mt-2 text-sm\",\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsxs(\"p\", {\n                                            children: [\n                                                /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                                    className: \"font-medium\",\n                                                    children: \"ID:\"\n                                                }),\n                                                \" \",\n                                                successData.id\n                                            ]\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsxs(\"p\", {\n                                            children: [\n                                                /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                                    className: \"font-medium\",\n                                                    children: \"Code:\"\n                                                }),\n                                                \" \",\n                                                successData.code\n                                            ]\n                                        }),\n                                        successData.name && /* @__PURE__ */ jsxRuntime.jsxs(\"p\", {\n                                            children: [\n                                                /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                                    className: \"font-medium\",\n                                                    children: \"Name:\"\n                                                }),\n                                                \" \",\n                                                successData.name\n                                            ]\n                                        }),\n                                        successData.email && /* @__PURE__ */ jsxRuntime.jsxs(\"p\", {\n                                            children: [\n                                                /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                                    className: \"font-medium\",\n                                                    children: \"Email:\"\n                                                }),\n                                                \" \",\n                                                successData.email\n                                            ]\n                                        })\n                                    ]\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsx(\"p\", {\n                                    className: \"mt-2 text-xs\",\n                                    children: \"Please check your email for confirmation and next steps.\"\n                                })\n                            ]\n                        })\n                    ]\n                })\n            }),\n            /* @__PURE__ */ jsxRuntime.jsxs(\"form\", {\n                onSubmit: handleSubmit,\n                className: \"affiliate-form relative\",\n                children: [\n                    /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                        className: \"mb-4\",\n                        children: [\n                            /* @__PURE__ */ jsxRuntime.jsx(\"h2\", {\n                                className: \"text-[#323232] font-black text-2xl\",\n                                children: \"Become an Affiliate\"\n                            }),\n                            /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                className: \"text-[#666] font-semibold text-lg\",\n                                children: \"Fill in your details to join\"\n                            })\n                        ]\n                    }),\n                    error && /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                        className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",\n                        children: /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                            className: \"flex items-start\",\n                            children: [\n                                /* @__PURE__ */ jsxRuntime.jsx(\"svg\", {\n                                    className: \"w-6 h-6 mr-2 mt-0.5 flex-shrink-0\",\n                                    fill: \"none\",\n                                    stroke: \"currentColor\",\n                                    viewBox: \"0 0 24 24\",\n                                    children: /* @__PURE__ */ jsxRuntime.jsx(\"path\", {\n                                        strokeLinecap: \"round\",\n                                        strokeLinejoin: \"round\",\n                                        strokeWidth: \"2\",\n                                        d: \"M6 18L18 6M6 6l12 12\"\n                                    })\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                    className: \"flex-1\",\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"p\", {\n                                            className: \"font-medium\",\n                                            children: error.split(\":\")[0]\n                                        }),\n                                        error.includes(\":\") && /* @__PURE__ */ jsxRuntime.jsx(\"p\", {\n                                            className: \"text-sm mt-1\",\n                                            children: error.split(\":\")[1].trim()\n                                        })\n                                    ]\n                                })\n                            ]\n                        })\n                    }),\n                    /* @__PURE__ */ jsxRuntime.jsx(\"input\", {\n                        type: \"email\",\n                        name: \"email\",\n                        placeholder: \"Email Address\",\n                        value: formData.email,\n                        onChange: handleChange,\n                        required: true,\n                        className: \"affiliate-input\"\n                    }),\n                    /* @__PURE__ */ jsxRuntime.jsx(\"input\", {\n                        type: \"text\",\n                        name: \"firstName\",\n                        placeholder: \"First Name\",\n                        value: formData.firstName,\n                        onChange: handleChange,\n                        required: true,\n                        className: \"affiliate-input\"\n                    }),\n                    /* @__PURE__ */ jsxRuntime.jsx(\"input\", {\n                        type: \"text\",\n                        name: \"lastName\",\n                        placeholder: \"Last Name\",\n                        value: formData.lastName,\n                        onChange: handleChange,\n                        required: true,\n                        className: \"affiliate-input\"\n                    }),\n                    /* @__PURE__ */ jsxRuntime.jsx(\"input\", {\n                        type: \"email\",\n                        name: \"paypalEmail\",\n                        placeholder: \"PayPal Email\",\n                        value: formData.paypalEmail,\n                        onChange: handleChange,\n                        required: true,\n                        className: \"affiliate-input\"\n                    }),\n                    /* @__PURE__ */ jsxRuntime.jsx(\"input\", {\n                        type: \"text\",\n                        name: \"inviteCode\",\n                        placeholder: \"Invite Code (Optional)\",\n                        value: formData.inviteCode,\n                        onChange: handleChange,\n                        className: \"affiliate-input\"\n                    }),\n                    /* @__PURE__ */ jsxRuntime.jsx(\"button\", {\n                        type: \"submit\",\n                        disabled: isSubmitting,\n                        className: \"submit-button\",\n                        children: isSubmitting ? /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                            className: \"flex items-center justify-center\",\n                            children: [\n                                /* @__PURE__ */ jsxRuntime.jsxs(\"svg\", {\n                                    className: \"animate-spin h-5 w-5 mr-3\",\n                                    viewBox: \"0 0 24 24\",\n                                    children: [\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"circle\", {\n                                            className: \"opacity-25\",\n                                            cx: \"12\",\n                                            cy: \"12\",\n                                            r: \"10\",\n                                            stroke: \"currentColor\",\n                                            strokeWidth: \"4\",\n                                            fill: \"none\"\n                                        }),\n                                        /* @__PURE__ */ jsxRuntime.jsx(\"path\", {\n                                            className: \"opacity-75\",\n                                            fill: \"currentColor\",\n                                            d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                                        })\n                                    ]\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                    children: \"Submitting...\"\n                                })\n                            ]\n                        }) : /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, {\n                            children: [\n                                /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                    children: \"Submit\"\n                                }),\n                                /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                    children: \"→\"\n                                })\n                            ]\n                        })\n                    })\n                ]\n            })\n        ]\n    });\n};\n_s3(AffiliateSignup, \"UcxhgNx4ubE3bnaDOVs4EiDmlqI=\");\n_c2 = AffiliateSignup;\nvar AffiliateDashboardCard = function(param) {\n    var commission = param.commission, onShare = param.onShare;\n    var links = commission.links, commission_stats = commission.commission_stats;\n    var primaryLink = links[0];\n    var stats = commission_stats.currencies.USD;\n    return /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n        className: \"bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 p-6 space-y-6\",\n        children: [\n            /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                className: \"space-y-4\",\n                children: [\n                    /* @__PURE__ */ jsxRuntime.jsx(\"h2\", {\n                        className: \"text-lg font-semibold\",\n                        children: \"Personal Information\"\n                    }),\n                    /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                        className: \"space-y-3\",\n                        children: [\n                            /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                className: \"flex items-center gap-2\",\n                                children: [\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"svg\", {\n                                        className: \"w-5 h-5 text-gray-500\",\n                                        fill: \"none\",\n                                        stroke: \"currentColor\",\n                                        viewBox: \"0 0 24 24\",\n                                        children: /* @__PURE__ */ jsxRuntime.jsx(\"path\", {\n                                            strokeLinecap: \"round\",\n                                            strokeLinejoin: \"round\",\n                                            strokeWidth: \"2\",\n                                            d: \"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                                        })\n                                    }),\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                        children: \"\".concat(commission.first_name, \" \").concat(commission.last_name)\n                                    })\n                                ]\n                            }),\n                            /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                className: \"flex items-center gap-2\",\n                                children: [\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"svg\", {\n                                        className: \"w-5 h-5 text-gray-500\",\n                                        fill: \"none\",\n                                        stroke: \"currentColor\",\n                                        viewBox: \"0 0 24 24\",\n                                        children: /* @__PURE__ */ jsxRuntime.jsx(\"path\", {\n                                            strokeLinecap: \"round\",\n                                            strokeLinejoin: \"round\",\n                                            strokeWidth: \"2\",\n                                            d: \"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n                                        })\n                                    }),\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                        children: commission.email\n                                    })\n                                ]\n                            }),\n                            /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                className: \"flex items-center gap-2\",\n                                children: [\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"svg\", {\n                                        className: \"w-5 h-5 text-gray-500\",\n                                        fill: \"none\",\n                                        stroke: \"currentColor\",\n                                        viewBox: \"0 0 24 24\",\n                                        children: /* @__PURE__ */ jsxRuntime.jsx(\"path\", {\n                                            strokeLinecap: \"round\",\n                                            strokeLinejoin: \"round\",\n                                            strokeWidth: \"2\",\n                                            d: \"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\"\n                                        })\n                                    }),\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                        children: commission.paypal_email\n                                    })\n                                ]\n                            }),\n                            /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                className: \"flex items-center gap-2\",\n                                children: [\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"svg\", {\n                                        className: \"w-5 h-5 text-gray-500\",\n                                        fill: \"none\",\n                                        stroke: \"currentColor\",\n                                        viewBox: \"0 0 24 24\",\n                                        children: /* @__PURE__ */ jsxRuntime.jsx(\"path\", {\n                                            strokeLinecap: \"round\",\n                                            strokeLinejoin: \"round\",\n                                            strokeWidth: \"2\",\n                                            d: \"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                                        })\n                                    }),\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"span\", {\n                                        children: new Date(commission.created_at).toLocaleDateString()\n                                    })\n                                ]\n                            })\n                        ]\n                    })\n                ]\n            }),\n            /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                className: \"space-y-4\",\n                children: [\n                    /* @__PURE__ */ jsxRuntime.jsx(\"h2\", {\n                        className: \"text-lg font-semibold\",\n                        children: \"Referral Link\"\n                    }),\n                    /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                        className: \"flex items-center gap-2 bg-gray-50 p-3 rounded\",\n                        children: [\n                            /* @__PURE__ */ jsxRuntime.jsx(\"input\", {\n                                type: \"text\",\n                                readOnly: true,\n                                value: (primaryLink === null || primaryLink === void 0 ? void 0 : primaryLink.url) || \"\",\n                                className: \"flex-1 bg-transparent outline-none\"\n                            }),\n                            /* @__PURE__ */ jsxRuntime.jsx(\"button\", {\n                                onClick: onShare,\n                                className: \"text-blue-600 hover:text-blue-800\",\n                                children: /* @__PURE__ */ jsxRuntime.jsx(\"svg\", {\n                                    className: \"w-5 h-5\",\n                                    fill: \"none\",\n                                    stroke: \"currentColor\",\n                                    viewBox: \"0 0 24 24\",\n                                    children: /* @__PURE__ */ jsxRuntime.jsx(\"path\", {\n                                        strokeLinecap: \"round\",\n                                        strokeLinejoin: \"round\",\n                                        strokeWidth: \"2\",\n                                        d: \"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z\"\n                                    })\n                                })\n                            })\n                        ]\n                    }),\n                    /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                        className: \"grid grid-cols-3 gap-4 text-center\",\n                        children: [\n                            /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                children: [\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                                        className: \"text-sm text-gray-500\",\n                                        children: \"Visitors\"\n                                    }),\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                                        className: \"font-semibold\",\n                                        children: commission.visitors\n                                    })\n                                ]\n                            }),\n                            /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                children: [\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                                        className: \"text-sm text-gray-500\",\n                                        children: \"Leads\"\n                                    }),\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                                        className: \"font-semibold\",\n                                        children: commission.leads\n                                    })\n                                ]\n                            }),\n                            /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                children: [\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                                        className: \"text-sm text-gray-500\",\n                                        children: \"Conversions\"\n                                    }),\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                                        className: \"font-semibold\",\n                                        children: commission.conversions\n                                    })\n                                ]\n                            })\n                        ]\n                    })\n                ]\n            }),\n            /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                className: \"space-y-4\",\n                children: [\n                    /* @__PURE__ */ jsxRuntime.jsx(\"h2\", {\n                        className: \"text-lg font-semibold\",\n                        children: \"Income Status\"\n                    }),\n                    /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                        className: \"grid grid-cols-2 gap-4\",\n                        children: [\n                            /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                className: \"bg-green-50 p-4 rounded-lg\",\n                                children: [\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                                        className: \"text-sm text-green-600\",\n                                        children: \"Total Income\"\n                                    }),\n                                    /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                        className: \"text-2xl font-bold text-green-700\",\n                                        children: [\n                                            \"$\",\n                                            (stats.total.cents / 100).toFixed(2)\n                                        ]\n                                    })\n                                ]\n                            }),\n                            /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                className: \"bg-yellow-50 p-4 rounded-lg\",\n                                children: [\n                                    /* @__PURE__ */ jsxRuntime.jsx(\"div\", {\n                                        className: \"text-sm text-yellow-600\",\n                                        children: \"Pending\"\n                                    }),\n                                    /* @__PURE__ */ jsxRuntime.jsxs(\"div\", {\n                                        className: \"text-2xl font-bold text-yellow-700\",\n                                        children: [\n                                            \"$\",\n                                            (stats.unpaid.cents / 100).toFixed(2)\n                                        ]\n                                    })\n                                ]\n                            })\n                        ]\n                    })\n                ]\n            })\n        ]\n    });\n};\n_c3 = AffiliateDashboardCard;\nexports.AffiliateDashboardCard = AffiliateDashboardCard;\nexports.AffiliateSignup = AffiliateSignup;\nexports.ReferralLink = ReferralLink;\nexports.RewardfulProvider = RewardfulProvider;\nexports.initRewardful = initRewardful;\nexports.rewardfulService = rewardfulService;\nexports.useRewardful = useRewardful;\nvar _c, _c1, _c2, _c3;\n$RefreshReg$(_c, \"RewardfulProvider\");\n$RefreshReg$(_c1, \"ReferralLink\");\n$RefreshReg$(_c2, \"AffiliateSignup\");\n$RefreshReg$(_c3, \"AffiliateDashboardCard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../dist/index.js\n"));

/***/ })

});